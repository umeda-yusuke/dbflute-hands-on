2024-12-03 17:08:14,858 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-03 17:08:14,859 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-03 17:08:14,859 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-03 17:08:14,860 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-03 17:08:14,860 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-03 17:08:14,861 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-03 17:08:20,214 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:08:20,214 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:08:20,214 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?
2024-12-03 17:08:20,214 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:08:20,220 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-03 17:08:20,315 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-03 17:08:20,320 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-03 17:08:20,321 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-03 17:08:20,321 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-03 17:08:20,321 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-03 17:08:20,321 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-03 17:08:20,321 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-03 17:08:20,321 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-03 17:08:20,323 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-03 17:08:20,325 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-03 17:08:20,325 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-03 17:08:20,325 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-03 17:08:20,329 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-03 17:08:20,356 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m05s497ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-03 17:11:03,891 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-03 17:11:03,892 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-03 17:11:03,892 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-03 17:11:03,894 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-03 17:11:03,894 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-03 17:11:03,894 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-03 17:11:05,512 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:11:05,513 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:11:05,513 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-03 17:11:05,513 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:11:05,517 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-03 17:11:05,597 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-03 17:11:05,602 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-03 17:11:05,603 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-03 17:11:05,603 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-03 17:11:05,603 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-03 17:11:05,603 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-03 17:11:05,603 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-03 17:11:05,603 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-03 17:11:05,604 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-03 17:11:05,605 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-03 17:11:05,606 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-03 17:11:05,606 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-03 17:11:05,609 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-03 17:11:05,631 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s739ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-03 17:12:40,889 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-03 17:12:40,890 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-03 17:12:40,890 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-03 17:12:40,891 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-03 17:12:40,891 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-03 17:12:40,892 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-03 17:12:43,301 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:12:43,301 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:12:43,301 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-03 17:12:43,302 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:12:43,307 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-03 17:12:43,525 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-03 17:12:43,530 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-03 17:12:43,531 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-03 17:12:43,531 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-03 17:12:43,531 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-03 17:12:43,531 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-03 17:12:43,531 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-03 17:12:43,531 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-03 17:12:43,532 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-03 17:12:43,533 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-03 17:12:43,533 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-03 17:12:43,533 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-03 17:12:43,562 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
create user maihamadb@localhost identified by 'maihamadb'
2024-12-03 17:12:43,567 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.* to maihamadb@localhost
2024-12-03 17:12:43,568 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2024-12-03 17:12:43,569 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=4 failure=0
2024-12-03 17:12:43,569 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-10-basic.sql
2024-12-03 17:12:43,569 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():411) - ...Coming back to the main user from the user 'system'
2024-12-03 17:12:43,573 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table `MEMBER`(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2024-12-03 17:12:43,574 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#lazyConnectIfNeeds():496) - ...Connecting by main user lazily
2024-12-03 17:12:43,574 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:12:43,574 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:12:43,574 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-03 17:12:43,575 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:12:43,575 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-03 17:12:43,589 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.40
2024-12-03 17:12:43,589 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.49 ( Revision: ad86f36e100e104cd926c6b81c8cab9565750116 ) for JDBC 4.0
2024-12-03 17:12:43,596 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2024-12-03 17:12:43,602 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2024-12-03 17:12:43,607 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2024-12-03 17:12:43,611 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    AKIRAKANI_OKASHII_KARAMU_MEI INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2024-12-03 17:12:43,615 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2024-12-03 17:12:43,620 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2024-12-03 17:12:43,625 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2024-12-03 17:12:43,630 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2024-12-03 17:12:43,634 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2024-12-03 17:12:43,638 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    PRIMARY KEY (PRODUCT_STATUS_CODE)
) COMMENT='商品ステータス'
2024-12-03 17:12:43,641 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2024-12-03 17:12:43,644 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2024-12-03 17:12:43,648 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2024-12-03 17:12:43,652 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2024-12-03 17:12:43,655 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table `MEMBER` add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2024-12-03 17:12:43,666 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-03 17:12:43,676 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2024-12-03 17:12:43,687 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2024-12-03 17:12:43,696 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-03 17:12:43,706 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-03 17:12:43,715 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2024-12-03 17:12:43,725 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-03 17:12:43,733 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-03 17:12:43,743 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2024-12-03 17:12:43,753 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-03 17:12:43,763 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2024-12-03 17:12:43,774 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2024-12-03 17:12:43,783 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2024-12-03 17:12:43,799 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2024-12-03 17:12:43,811 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2024-12-03 17:12:43,820 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on `MEMBER`(MEMBER_NAME)
2024-12-03 17:12:43,832 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on `MEMBER`(FORMALIZED_DATETIME)
2024-12-03 17:12:43,844 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2024-12-03 17:12:43,848 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(AKIRAKANI_OKASHII_KARAMU_MEI)
2024-12-03 17:12:43,852 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2024-12-03 17:12:43,859 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2024-12-03 17:12:43,865 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2024-12-03 17:12:43,872 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2024-12-03 17:12:43,877 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2024-12-03 17:12:43,884 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=40 failure=0
2024-12-03 17:12:43,884 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2024-12-03 17:12:43,885 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2024-12-03 17:12:43,885 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=44, failure=0 (in 3 files)
2024-12-03 17:12:43,885 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():594) - ...Closing connections to change-users: [system]
2024-12-03 17:12:43,899 [main] INFO  (DfLoadDataProcess#execute():133) - 
2024-12-03 17:12:43,899 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2024-12-03 17:12:43,899 [main] INFO  (DfLoadDataProcess#execute():135) - *                   *
2024-12-03 17:12:43,899 [main] INFO  (DfLoadDataProcess#execute():136) - * Load Data         *
2024-12-03 17:12:43,899 [main] INFO  (DfLoadDataProcess#execute():137) - *                   *
2024-12-03 17:12:43,899 [main] INFO  (DfLoadDataProcess#execute():138) - * * * * * * * * * * *
2024-12-03 17:12:43,906 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2024-12-03 17:12:43,906 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2024-12-03 17:12:43,906 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2024-12-03 17:12:43,907 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2024-12-03 17:12:43,907 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2024-12-03 17:12:43,907 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2024-12-03 17:12:43,908 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2024-12-03 17:12:43,909 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2024-12-03 17:12:43,909 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2024-12-03 17:12:43,910 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2024-12-03 17:12:43,914 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s027ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 8.0.40)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=44, failure=0 (in 3 files) - 00m00s357ms
  (Create Schema) - 00m00s355ms
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema.sql

 Load Data: *empty loading - 00m00s006ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s004ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-03 17:20:08,462 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2024-12-03 17:20:08,463 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2024-12-03 17:20:08,463 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2024-12-03 17:20:08,463 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2024-12-03 17:20:08,463 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2024-12-03 17:20:08,472 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:20:08,472 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:20:08,472 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-03 17:20:08,472 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:20:08,485 [main] INFO  (DfSchemaXmlSerializer#serialize():305) - 
2024-12-03 17:20:08,485 [main] INFO  (DfSchemaXmlSerializer#serialize():306) - ...Starting to process JDBC to SchemaXML
2024-12-03 17:20:08,486 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1559) - ...Loading previous schema (schema diff process)
2024-12-03 17:20:08,489 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1562) -  -> no previous (first time)
2024-12-03 17:20:08,494 [main] INFO  (DfSchemaXmlSerializer#generateXML():379) - ...Getting DB connection
2024-12-03 17:20:08,498 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-03 17:20:08,724 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.40
2024-12-03 17:20:08,724 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.49 ( Revision: ad86f36e100e104cd926c6b81c8cab9565750116 ) for JDBC 4.0
2024-12-03 17:20:08,725 [main] INFO  (DfSchemaXmlSerializer#generateXML():382) - ...Getting DB meta data
2024-12-03 17:20:08,726 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2024-12-03 17:20:08,726 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2024-12-03 17:20:08,727 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2024-12-03 17:20:08,732 [main] INFO  (DfDbCommentExtractorBase#doSelectUserTabComments():121) - select table_type as OBJECT_TYPE, table_name as TABLE_NAME, table_comment as COMMENTS from information_schema.tables where table_schema = 'maihamadb' order by table_name asc
2024-12-03 17:20:08,735 [main] INFO  (DfDbCommentExtractorBase#doSelectUserColComments():168) - select table_name as TABLE_NAME, column_name as COLUMN_NAME, column_comment as COMMENTS from information_schema.columns where table_schema = 'maihamadb' order by table_name asc, column_name asc
2024-12-03 17:20:08,740 [main] INFO  (DfDatetimePrecisionExtractorMySQL#extractDatetimePrecisionMap():59) - select TABLE_NAME, COLUMN_NAME, DATETIME_PRECISION from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA = 'maihamadb' and DATA_TYPE = 'datetime'
2024-12-03 17:20:08,747 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2024-12-03 17:20:08,747 [main] INFO  (DfSchemaXmlSerializer#processTable():439) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2024-12-03 17:20:08,747 [main] INFO  (DfSchemaXmlSerializer#processTable():440) - $ [Table List]
2024-12-03 17:20:08,747 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member(TABLE) // 会員: 会員登録時にデータが登録される。...
2024-12-03 17:20:08,766 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member_address(TABLE) // 会員住所情報: 会員の住所に関する情報。...
2024-12-03 17:20:08,774 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member_login(TABLE) // 会員ログイン情報: ログインするたびに登録されるログイン履歴。
2024-12-03 17:20:08,781 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member_security(TABLE) // 会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある
2024-12-03 17:20:08,787 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member_service(TABLE) // 会員サービス: 会員のサービス情報（ポイントサービスなど）。
2024-12-03 17:20:08,793 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member_status(TABLE) // 会員ステータス
2024-12-03 17:20:08,800 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.member_withdrawal(TABLE) // 会員退会情報: 退会会員の退会に関する詳細な情報。...
2024-12-03 17:20:08,806 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.product(TABLE) // 商品
2024-12-03 17:20:08,813 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.product_category(TABLE) // 商品カテゴリ: 商品のカテゴリを表現するマスタ。...
2024-12-03 17:20:08,818 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.product_status(TABLE) // 商品ステータス
2024-12-03 17:20:08,823 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.purchase(TABLE) // 購入: 一つの商品に対する一回の購入を表現する。...
2024-12-03 17:20:08,831 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.purchase_payment(TABLE) // 購入支払: 購入に対する支払。...
2024-12-03 17:20:08,837 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.region(TABLE) // 地域: 主に会員の住所に対応する地域。...
2024-12-03 17:20:08,842 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.service_rank(TABLE) // サービスランク: 会員のサービスレベルを表現するランク。...
2024-12-03 17:20:08,847 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():520) - $ maihamadb.withdrawal_reason(TABLE) // 退会理由: 会員に選ばせる定型的な退会理由のマスタ。
2024-12-03 17:20:08,852 [main] INFO  (DfSchemaXmlSerializer#processTable():452) - $ 
2024-12-03 17:20:08,852 [main] INFO  (DfSchemaXmlSerializer#processTable():453) - $ [Table Count]
2024-12-03 17:20:08,852 [main] INFO  (DfSchemaXmlSerializer#processTable():454) - $ 15
2024-12-03 17:20:08,852 [main] INFO  (DfSchemaXmlSerializer#processTable():455) - $ = = = = = = = = = =/
2024-12-03 17:20:08,852 [main] INFO  (DfSchemaXmlSerializer#processTable():456) - 
2024-12-03 17:20:08,853 [main] INFO  (DfSchemaXmlSerializer#processSequence():823) - ...Getting sequences
2024-12-03 17:20:08,854 [main] INFO  (DfSchemaXmlSerializer#serialize():320) - ...Serializing XML:
2024-12-03 17:20:08,854 [main] INFO  (DfSchemaXmlSerializer#serialize():321) -   filePath = ./schema/project-schema-maihamadb.xml
2024-12-03 17:20:08,854 [main] INFO  (DfSchemaXmlSerializer#serialize():322) -   encoding = UTF-8
2024-12-03 17:20:08,863 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1570) - ...Loading next schema (schema diff process)
2024-12-03 17:20:08,867 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2024-12-03 17:20:08,922 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1575) -  -> different from previous (schema diff)
2024-12-03 17:20:08,922 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1577) - ...Serializing schema-diff:
2024-12-03 17:20:08,922 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1578) -   filePath = ./schema/project-history-maihamadb.diffmap
2024-12-03 17:20:08,927 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2024-12-03 17:20:08,931 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s473ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 8.0.40)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2024-12-03 17:21:23,346 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2024-12-03 17:21:23,347 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2024-12-03 17:21:23,347 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2024-12-03 17:21:23,347 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2024-12-03 17:21:23,347 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2024-12-03 17:21:23,355 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:21:23,355 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:21:23,355 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-03 17:21:23,356 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:21:23,356 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2024-12-03 17:21:23,356 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2024-12-03 17:21:23,356 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2024-12-03 17:21:23,356 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2024-12-03 17:21:23,356 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2024-12-03 17:21:23,356 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2024-12-03 17:21:23,372 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2024-12-03 17:21:23,402 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2024-12-03 17:21:23,402 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2024-12-03 17:21:23,402 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2024-12-03 17:21:23,403 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2024-12-03 17:21:23,403 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2024-12-03 17:21:23,403 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2024-12-03 17:21:23,404 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2024-12-03 17:21:23,404 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2024-12-03 17:21:23,404 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2024-12-03 17:21:23,409 [main] INFO  (DfClsDeploymentInitializer#initializeClassificationDeployment():67) - ...Initializing ClassificationDeployment: project=maihamadb
2024-12-03 17:21:23,427 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2024-12-03 17:21:23,430 [main] INFO  (DfFlutistLog4JLogSystem#init():45) - ...Suppressing velocity.log, which is unneeded for also debug
2024-12-03 17:21:23,469 [main] INFO  (Database#doEnableDocumentOutputDirectory():1241) - ...Setting up documentOutputDirectory: ./output/doc
2024-12-03 17:21:23,471 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2024-12-03 17:21:23,479 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2024-12-03 17:21:23,496 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2024-12-03 17:21:23,496 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2024-12-03 17:21:23,503 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2024-12-03 17:21:23,601 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2024-12-03 17:21:23,601 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2024-12-03 17:21:23,601 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2024-12-03 17:21:23,615 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2024-12-03 17:21:23,616 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused)
2024-12-03 17:21:23,616 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2024-12-03 17:21:23,617 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s274ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2024-12-03 17:22:25,098 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2024-12-03 17:22:25,098 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2024-12-03 17:22:25,098 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2024-12-03 17:22:25,099 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2024-12-03 17:22:25,099 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2024-12-03 17:22:25,106 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-03 17:22:25,106 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-03 17:22:25,106 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-03 17:22:25,107 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-03 17:22:25,112 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2024-12-03 17:22:25,112 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2024-12-03 17:22:25,124 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2024-12-03 17:22:25,156 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2024-12-03 17:22:25,160 [main] INFO  (DfFlutistLog4JLogSystem#init():45) - ...Suppressing velocity.log, which is unneeded for also debug
2024-12-03 17:22:25,217 [main] INFO  (Database#doEnableGenerateOutputDirectory():1209) - ...Setting up generateOutputDirectory: ../src/main/java
2024-12-03 17:22:25,218 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2024-12-03 17:22:25,218 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2024-12-03 17:22:25,218 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2024-12-03 17:22:25,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2024-12-03 17:22:25,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2024-12-03 17:22:25,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2024-12-03 17:22:25,219 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2024-12-03 17:22:25,220 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2024-12-03 17:22:25,220 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2024-12-03 17:22:25,225 [main] INFO  (DfClsDeploymentInitializer#initializeClassificationDeployment():67) - ...Initializing ClassificationDeployment: project=maihamadb
2024-12-03 17:22:25,227 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2024-12-03 17:22:25,227 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2024-12-03 17:22:25,227 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2024-12-03 17:22:25,227 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2024-12-03 17:22:25,227 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2024-12-03 17:22:25,228 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2024-12-03 17:22:25,228 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2024-12-03 17:22:25,228 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2024-12-03 17:22:25,228 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2024-12-03 17:22:25,228 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2024-12-03 17:22:25,232 [main] INFO  (Database#info():2872) - public void parseAllCommon() {
2024-12-03 17:22:25,233 [main] INFO  (Database#info():2872) -     parse('DBCurrent');
2024-12-03 17:22:25,235 [main] INFO  (Database#info():2872) -     parse('DBFluteConfig');
2024-12-03 17:22:25,241 [main] INFO  (Database#info():2872) -     parse('DBFluteInitializer');
2024-12-03 17:22:25,243 [main] INFO  (Database#info():2872) -     parse('DBMetaInstanceHandler');
2024-12-03 17:22:25,250 [main] INFO  (Database#info():2872) -     parse('EntityDefinedCommonColumn');
2024-12-03 17:22:25,252 [main] INFO  (Database#info():2872) -     parse('ImplementedBehaviorSelector');
2024-12-03 17:22:25,254 [main] INFO  (Database#info():2872) -     parse('ImplementedCommonColumnAutoSetupper');
2024-12-03 17:22:25,256 [main] INFO  (Database#info():2872) -     parse('ImplementedInvokerAssistant');
2024-12-03 17:22:25,258 [main] INFO  (Database#info():2872) -     parse('ImplementedSqlClauseCreator');
2024-12-03 17:22:25,259 [main] INFO  (Database#info():2872) - }
2024-12-03 17:22:25,260 [main] INFO  (Database#info():2872) - public void parseContainerConfig() {
2024-12-03 17:22:25,260 [main] INFO  (Database#info():2872) -     parse('../resources/dbflute.xml')
2024-12-03 17:22:25,265 [main] INFO  (Database#info():2872) - }
2024-12-03 17:22:25,267 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2024-12-03 17:22:25,275 [main] INFO  (DfOldClassHandler#info():1045) - }
2024-12-03 17:22:25,275 [main] INFO  (Database#info():2872) - public void parseTableClass() {
2024-12-03 17:22:25,275 [main] INFO  (Database#info():2872) -     parse('member');
2024-12-03 17:22:25,409 [main] INFO  (Database#info():2872) -     parse('member_address');
2024-12-03 17:22:25,466 [main] INFO  (Database#info():2872) -     parse('member_login');
2024-12-03 17:22:25,515 [main] INFO  (Database#info():2872) -     parse('member_security');
2024-12-03 17:22:25,555 [main] INFO  (Database#info():2872) -     parse('member_service');
2024-12-03 17:22:25,602 [main] INFO  (Database#info():2872) -     parse('member_status');
2024-12-03 17:22:25,642 [main] INFO  (Database#info():2872) -     parse('member_withdrawal');
2024-12-03 17:22:25,685 [main] INFO  (Database#info():2872) -     parse('product');
2024-12-03 17:22:25,733 [main] INFO  (Database#info():2872) -     parse('product_category');
2024-12-03 17:22:25,777 [main] INFO  (Database#info():2872) -     parse('product_status');
2024-12-03 17:22:25,807 [main] INFO  (Database#info():2872) -     parse('purchase');
2024-12-03 17:22:25,851 [main] INFO  (Database#info():2872) -     parse('purchase_payment');
2024-12-03 17:22:25,883 [main] INFO  (Database#info():2872) -     parse('region');
2024-12-03 17:22:25,912 [main] INFO  (Database#info():2872) -     parse('service_rank');
2024-12-03 17:22:25,942 [main] INFO  (Database#info():2872) -     parse('withdrawal_reason');
2024-12-03 17:22:25,975 [main] INFO  (Database#info():2872) - }
2024-12-03 17:22:25,975 [main] INFO  (Database#info():2872) -  
2024-12-03 17:22:25,997 [main] INFO  (DfRefreshMan#resolveProjectAutoDetect():105) - *Cannot auto-detect your refresh Eclipse proejct.
2024-12-03 17:22:25,997 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2024-12-03 17:22:25,997 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [$$AutoDetect$$] by http://localhost:8386/
2024-12-03 17:22:26,020 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Retrying refreshing by default secondary URL http://localhost:8387/
2024-12-03 17:22:26,021 [main] INFO  (DfRefreshResourceProcess#show():295) - Failed to refresh the resources (continued): url=http://localhost:8386/, cause=ConnectException(Connection refused)
2024-12-03 17:22:26,021 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2024-12-03 17:22:26,022 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s930ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2024-12-11 13:23:09,662 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-11 13:23:09,662 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-11 13:23:09,663 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-11 13:23:09,664 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-11 13:23:09,665 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-11 13:23:09,665 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-11 13:23:12,346 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-11 13:23:12,347 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-11 13:23:12,348 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-11 13:23:12,348 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-11 13:23:12,354 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-11 13:23:12,463 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-11 13:23:12,468 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-11 13:23:12,469 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-11 13:23:12,469 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-11 13:23:12,469 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-11 13:23:12,469 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-11 13:23:12,469 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-11 13:23:12,469 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-11 13:23:12,470 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-11 13:23:12,472 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-11 13:23:12,472 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-11 13:23:12,472 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-11 13:23:12,475 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-11 13:23:12,526 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s864ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-11 13:24:20,204 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-11 13:24:20,204 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-11 13:24:20,204 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-11 13:24:20,206 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-11 13:24:20,206 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-11 13:24:20,206 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-11 13:24:22,327 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-11 13:24:22,327 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-11 13:24:22,328 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-11 13:24:22,328 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-11 13:24:22,333 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-11 13:24:22,412 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-11 13:24:22,416 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-11 13:24:22,417 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-11 13:24:22,417 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-11 13:24:22,417 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-11 13:24:22,417 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-11 13:24:22,417 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-11 13:24:22,417 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-11 13:24:22,418 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-11 13:24:22,419 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-11 13:24:22,420 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-11 13:24:22,420 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-11 13:24:22,424 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-11 13:24:22,439 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s234ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-11 13:27:48,738 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-11 13:27:48,738 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-11 13:27:48,738 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-11 13:27:48,739 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-11 13:27:48,740 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-11 13:27:48,740 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-11 13:27:52,429 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-11 13:27:52,430 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-11 13:27:52,430 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-11 13:27:52,430 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-11 13:27:52,435 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-11 13:27:52,532 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-11 13:27:52,536 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-11 13:27:52,537 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-11 13:27:52,537 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-11 13:27:52,537 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-11 13:27:52,537 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-11 13:27:52,537 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-11 13:27:52,537 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-11 13:27:52,539 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-11 13:27:52,541 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-11 13:27:52,541 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-11 13:27:52,541 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-11 13:27:52,545 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-11 13:27:52,558 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m03s819ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-12 13:12:51,214 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-12 13:12:51,215 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-12 13:12:51,215 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-12 13:12:51,217 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-12 13:12:51,217 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-12 13:12:51,217 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-12 13:12:52,484 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-12 13:12:52,484 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-12 13:12:52,484 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-12 13:12:52,484 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-12 13:12:52,489 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-12 13:12:52,582 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-12 13:12:52,587 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-12 13:12:52,588 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-12 13:12:52,588 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-12 13:12:52,588 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-12 13:12:52,588 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-12 13:12:52,588 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-12 13:12:52,588 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-12 13:12:52,589 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-12 13:12:52,592 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-12 13:12:52,592 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-12 13:12:52,592 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-12 13:12:52,596 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-12 13:12:52,620 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s409ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-12 13:15:21,013 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-12 13:15:21,014 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-12 13:15:21,014 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-12 13:15:21,015 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-12 13:15:21,015 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-12 13:15:21,015 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-12 13:15:22,433 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-12 13:15:22,434 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-12 13:15:22,434 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-12 13:15:22,434 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-12 13:15:22,439 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-12 13:15:22,533 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-12 13:15:22,537 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-12 13:15:22,538 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-12 13:15:22,539 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-12 13:15:22,539 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-12 13:15:22,540 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-12 13:15:22,541 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-12 13:15:22,541 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-12 13:15:22,541 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-12 13:15:22,545 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-12 13:15:22,559 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s544ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-12 18:14:24,969 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-12 18:14:24,970 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-12 18:14:24,970 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-12 18:14:24,972 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-12 18:14:24,972 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-12 18:14:24,972 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-12 18:14:26,349 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-12 18:14:26,349 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-12 18:14:26,350 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-12 18:14:26,350 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-12 18:14:26,356 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-12 18:14:26,452 [main] INFO  (DfReplaceSchemaTask#setupLazyConnection():146) - ...Being a lazy connection: Failed to connect: url=jdbc:mysql://localhost:4...
2024-12-12 18:14:26,457 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-12 18:14:26,457 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-12 18:14:26,457 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-12 18:14:26,457 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-12 18:14:26,457 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-12 18:14:26,457 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():260) - *Passed because it's a lazy connection
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-12 18:14:26,458 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-12 18:14:26,459 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-12 18:14:26,461 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-12 18:14:26,462 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-12 18:14:26,462 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-12 18:14:26,465 [main] ERROR (DfDBFluteTaskUtil#logException():150) - Look! Read the message below.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Failed to execute DBFlute Task 'ReplaceSchema'.

[Advice]
Check the exception messages and the stack traces.
* * * * * * * * * */
java.lang.IllegalStateException: Failed to connect: url=jdbc:mysql://localhost:43376?allowPublicKeyRetrieval=true&sslMode=DISABLED info={password=, user=root}
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:319)
	at org.dbflute.properties.DfReplaceSchemaProperties.createAdditionalUserConnection(DfReplaceSchemaProperties.java:540)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess$1.dispatch(DfCreateSchemaProcess.java:326)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.dispatch(DfSqlFileRunnerExecute.java:89)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerExecute.execSQL(DfSqlFileRunnerExecute.java:58)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileRunnerBase.runTransaction(DfSqlFileRunnerBase.java:122)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.processSqlFile(DfSqlFileFireMan.java:174)
	at org.dbflute.helper.jdbc.sqlfile.DfSqlFileFireMan.fire(DfSqlFileFireMan.java:71)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.createSchema(DfCreateSchemaProcess.java:302)
	at org.dbflute.logic.replaceschema.process.DfCreateSchemaProcess.execute(DfCreateSchemaProcess.java:154)
	at org.dbflute.task.DfReplaceSchemaTask.createSchema(DfReplaceSchemaTask.java:309)
	at org.dbflute.task.DfReplaceSchemaTask.executeCoreProcess(DfReplaceSchemaTask.java:254)
	at org.dbflute.task.DfReplaceSchemaTask.processReplaceSchema(DfReplaceSchemaTask.java:240)
	at org.dbflute.task.DfReplaceSchemaTask.doExecute(DfReplaceSchemaTask.java:160)
	at org.dbflute.task.bs.DfAbstractTexenTask$1.callActualExecute(DfAbstractTexenTask.java:129)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.doExecute(DfTaskBasicController.java:192)
	at org.dbflute.task.bs.assistant.DfTaskBasicController.execute(DfTaskBasicController.java:78)
	at org.dbflute.task.bs.DfAbstractTexenTask.execute(DfAbstractTexenTask.java:151)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.Main.runBuild(Main.java:698)
	at org.apache.tools.ant.Main.startAnt(Main.java:199)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.dbflute.properties.DfAbstractDBFluteProperties.createConnection(DfAbstractDBFluteProperties.java:314)
	... 33 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:579)
	at java.base/sun.nio.ch.Net.connect(Net.java:568)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 49 more
2024-12-12 18:14:26,487 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s517ms *Abort

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$


_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2024-12-12 18:18:53,477 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2024-12-12 18:18:53,478 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2024-12-12 18:18:53,478 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2024-12-12 18:18:53,480 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2024-12-12 18:18:53,480 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2024-12-12 18:18:53,480 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2024-12-12 18:18:54,324 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2024-12-12 18:18:54,325 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = com.mysql.jdbc.Driver
2024-12-12 18:18:54,325 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
2024-12-12 18:18:54,325 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = maihamadb
2024-12-12 18:18:54,331 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2024-12-12 18:18:54,556 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = MySQL 8.0.40
2024-12-12 18:18:54,556 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = MySQL Connector Java mysql-connector-java-5.1.49 ( Revision: ad86f36e100e104cd926c6b81c8cab9565750116 ) for JDBC 4.0
2024-12-12 18:18:54,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2024-12-12 18:18:54,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2024-12-12 18:18:54,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2024-12-12 18:18:54,561 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2024-12-12 18:18:54,562 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2024-12-12 18:18:54,562 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2024-12-12 18:18:54,566 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2024-12-12 18:18:54,566 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2024-12-12 18:18:54,566 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2024-12-12 18:18:54,583 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - truncate table member_address
2024-12-12 18:18:54,590 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - truncate table member_login
2024-12-12 18:18:54,594 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - truncate table member_security
2024-12-12 18:18:54,600 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - truncate table member_service
2024-12-12 18:18:54,605 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - truncate table member_withdrawal
2024-12-12 18:18:54,615 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - truncate table purchase_payment
2024-12-12 18:18:54,625 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member drop foreign key FK_MEMBER_MEMBER_STATUS
2024-12-12 18:18:54,639 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_MEMBER
2024-12-12 18:18:54,643 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_address drop foreign key FK_MEMBER_ADDRESS_REGION
2024-12-12 18:18:54,649 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER_STATUS
2024-12-12 18:18:54,653 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_login drop foreign key FK_MEMBER_LOGIN_MEMBER
2024-12-12 18:18:54,658 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_security drop foreign key FK_MEMBER_SECURITY_MEMBER
2024-12-12 18:18:54,663 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_service drop foreign key FK_MEMBER_SERVICE_MEMBER
2024-12-12 18:18:54,667 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_service drop foreign key FK_MEMBER_SERVICE_SERVICE_RANK_CODE
2024-12-12 18:18:54,673 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_MEMBER
2024-12-12 18:18:54,677 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table member_withdrawal drop foreign key FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON
2024-12-12 18:18:54,682 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table product drop foreign key FK_PRODUCT_PRODUCT_CATEGORY
2024-12-12 18:18:54,688 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table product drop foreign key FK_PRODUCT_PRODUCT_STATUS
2024-12-12 18:18:54,698 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table product_category drop foreign key FK_PRODUCT_CATEGORY_PARENT
2024-12-12 18:18:54,703 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table purchase drop foreign key FK_PURCHASE_MEMBER
2024-12-12 18:18:54,709 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table purchase drop foreign key FK_PURCHASE_PRODUCT
2024-12-12 18:18:54,716 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - alter table purchase_payment drop foreign key FK_PURCHASE_PAYMENT_PURCHASE
2024-12-12 18:18:54,724 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member
2024-12-12 18:18:54,727 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member_address
2024-12-12 18:18:54,730 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member_login
2024-12-12 18:18:54,732 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member_security
2024-12-12 18:18:54,734 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member_service
2024-12-12 18:18:54,737 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member_status
2024-12-12 18:18:54,739 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table member_withdrawal
2024-12-12 18:18:54,741 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table product
2024-12-12 18:18:54,744 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table product_category
2024-12-12 18:18:54,746 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table product_status
2024-12-12 18:18:54,749 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table purchase
2024-12-12 18:18:54,752 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table purchase_payment
2024-12-12 18:18:54,755 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table region
2024-12-12 18:18:54,757 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table service_rank
2024-12-12 18:18:54,759 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():639) - drop table withdrawal_reason
2024-12-12 18:18:54,774 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2024-12-12 18:18:54,774 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2024-12-12 18:18:54,774 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2024-12-12 18:18:54,774 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2024-12-12 18:18:54,774 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2024-12-12 18:18:54,774 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2024-12-12 18:18:54,776 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-00-system.sql
2024-12-12 18:18:54,777 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:changeUser(system)#
-- #df:checkUser(mainSchema)#
create database maihamadb
2024-12-12 18:18:54,777 [main] INFO  (DfCreateSchemaProcess$1#dispatch():325) - ...Creating a connection to system
2024-12-12 18:18:54,777 [main] INFO  (DfReplaceSchemaProperties#createAdditionalUserConnection():539) - ...Creating a connection for additional user: root
2024-12-12 18:18:54,792 [main] INFO  (DfCreateSchemaProcess$1#dispatch():351) - ...Saying good-bye to the user 'system' because of checked: [mainSchema]
2024-12-12 18:18:54,792 [main] INFO  (DfCreateSchemaProcess$1#dispatch():353) -  -> Can't create database 'maihamadb'; database exists
2024-12-12 18:18:54,792 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():463) - ...Reviving the user 'system' until the end of this SQL file
2024-12-12 18:18:54,793 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
create user maihamadb@localhost identified by 'maihamadb'
2024-12-12 18:18:54,796 [main] INFO  (DfCreateSchemaProcess$1#dispatch():351) - ...Saying good-bye to the user 'system' because of checked: [mainUser, grant]
2024-12-12 18:18:54,796 [main] INFO  (DfCreateSchemaProcess$1#dispatch():353) -  -> Operation CREATE USER failed for 'maihamadb'@'localhost'
2024-12-12 18:18:54,796 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#isTargetSql():463) - ...Reviving the user 'system' until the end of this SQL file
2024-12-12 18:18:54,796 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- #df:reviveUser()#
-- #df:checkUser(mainUser, grant)#
grant all privileges on maihamadb.* to maihamadb@localhost
2024-12-12 18:18:54,797 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - flush privileges
2024-12-12 18:18:54,799 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=2 failure=0
2024-12-12 18:18:54,799 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema-10-basic.sql
2024-12-12 18:18:54,799 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():400) - ...Saying good-bye to the user 'system' again
2024-12-12 18:18:54,799 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreRevivedUser():404) - ...Clearing revived users
2024-12-12 18:18:54,799 [main] INFO  (DfCreateSchemaProcess$DfSqlFileRunnerExecuteCreateSchema#restoreCurrentUser():411) - ...Coming back to the main user from the user 'system'
2024-12-12 18:18:54,801 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table `MEMBER`(
    MEMBER_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員ID: 会員を識別するID。連番として基本的に自動採番される。
（会員IDだけに限らず）採番方法はDBMSによって変わる。',
    MEMBER_NAME VARCHAR(160) NOT NULL COMMENT '会員名称: 会員のフルネームの名称。',
    MEMBER_ACCOUNT VARCHAR(50) NOT NULL COMMENT '会員アカウント: 会員がログイン時に利用するアカウントNO。',
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード',
    FORMALIZED_DATETIME DATETIME COMMENT '正式会員日時: 会員が正式に確定した日時。一度確定したら更新されない。
仮会員のときはnull。',
    BIRTHDATE DATE COMMENT '生年月日: 必須項目ではないので、このデータがない会員もいる。',
    REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時: レコードが登録された日時。共通カラムの一つ。',
    REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ: レコードを登録したユーザ。共通カラムの一つ。',
    UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時: レコードが（最後に）更新された日時。共通カラムの一つ。',
    UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ: レコードを更新したユーザ。',
    VERSION_NO BIGINT NOT NULL COMMENT 'バージョンNO: レコードのバージョンを示すNO。
更新回数と等しく、主に排他制御のために利用される。',
    PRIMARY KEY (MEMBER_ID),
    UNIQUE (MEMBER_ACCOUNT)
) COMMENT='会員: 会員登録時にデータが登録される。
基本的に物理削除はなく、退会したらステータスが退会会員になる。'
2024-12-12 18:18:54,807 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_ADDRESS(
    MEMBER_ADDRESS_ID INTEGER AUTO_INCREMENT NOT NULL COMMENT '会員住所ID: 会員住所を識別するID。
履歴分も含むテーブルなので、これ自体はFKではない。',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
履歴分を含むため、これだけではユニークにはならない。',
    VALID_BEGIN_DATE DATE NOT NULL COMMENT '有効開始日: 一つの有効期間の開始を示す日付。
前の有効終了日の次の日の値が格納される。',
    VALID_END_DATE DATE NOT NULL COMMENT '有効終了日: 有効期間の終了日。
次の有効開始日の一日前の値が格納される。
ただし、次の有効期間がない場合は 9999/12/31 となる。',
    ADDRESS VARCHAR(200) NOT NULL COMMENT '住所: まるごと住所',
    REGION_ID INTEGER NOT NULL COMMENT '地域ID: 地域を参照するID。
ここでは特に住所の内容と連動しているわけではない。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ADDRESS_ID),
    UNIQUE (MEMBER_ID, VALID_BEGIN_DATE)
) COMMENT='会員住所情報: 会員の住所に関する情報。
同時に有効期間ごとに履歴管理されている。'
2024-12-12 18:18:54,813 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_LOGIN(
    MEMBER_LOGIN_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '会員ログインID',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID',
    LOGIN_DATETIME DATETIME NOT NULL COMMENT 'ログイン日時: ログインした瞬間の日時。',
    MOBILE_LOGIN_FLG INTEGER NOT NULL COMMENT 'モバイルログインフラグ: モバイル機器からのログインか否か。',
    LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT 'ログイン会員ステータスコード: ログイン時の会員ステータス',
    PRIMARY KEY (MEMBER_LOGIN_ID),
    UNIQUE (MEMBER_ID, LOGIN_DATETIME)
) COMMENT='会員ログイン情報: ログインするたびに登録されるログイン履歴。'
2024-12-12 18:18:54,817 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SECURITY(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: そのまま one-to-one を構成するためのFKとなる。',
    LOGIN_PASSWORD VARCHAR(50) NOT NULL COMMENT 'ログインパスワード: ログイン時に利用するパスワード。
本当は良くないが、Exampleなのでひとまず暗号化していない。',
    REMINDER_QUESTION VARCHAR(50) NOT NULL COMMENT 'リマインダ質問: パスワードを忘れた際のリマインダ機能における質問の内容。',
    REMINDER_ANSWER VARCHAR(50) NOT NULL COMMENT 'リマインダ回答: パスワードを忘れた際のリマインダ機能における質問の答え。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員セキュリティ情報: 会員とは one-to-one で、会員一人につき必ず一つのセキュリティ情報がある'
2024-12-12 18:18:54,822 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_SERVICE(
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。ユニークなので、会員とは one-to-one の関係に。',
    AKIRAKANI_OKASHII_KARAMU_MEI INTEGER NOT NULL COMMENT 'サービスポイント数: 会員が現在利用できるサービスポイントの数。
基本的に、購入時には増えてポイントを使ったら減る。',
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを参照するコード。
どんなランクがあるのかドキドキですね。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員サービス: 会員のサービス情報（ポイントサービスなど）。'
2024-12-12 18:18:54,827 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_WITHDRAWAL(
    MEMBER_ID INTEGER NOT NULL,
    WITHDRAWAL_REASON_CODE CHAR(3) COMMENT '退会理由コード: 退会した定型理由を参照するコード。
何も言わずに退会する会員もいるので必須項目ではない。',
    WITHDRAWAL_REASON_INPUT_TEXT TEXT COMMENT '退会理由入力テキスト: 会員がフリーテキストで入力できる退会理由。
もう言いたいこと言ってもらう感じ。',
    WITHDRAWAL_DATETIME DATETIME NOT NULL COMMENT '退会日時: 退会した瞬間の日時。
正式会員日時と違い、こっちはone-to-oneの別テーブルで。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (MEMBER_ID)
) COMMENT='会員退会情報: 退会会員の退会に関する詳細な情報。
退会会員のみデータが存在する。'
2024-12-12 18:18:54,831 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE(
    PURCHASE_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入ID: 連番',
    MEMBER_ID INTEGER NOT NULL COMMENT '会員ID: 会員を参照するID。
購入を識別する自然キー（複合ユニーク制約）の筆頭要素。',
    PRODUCT_ID INTEGER NOT NULL COMMENT '商品ID: 商品を参照するID。',
    PURCHASE_DATETIME DATETIME NOT NULL COMMENT '購入日時: 購入した瞬間の日時。',
    PURCHASE_COUNT INTEGER NOT NULL COMMENT '購入数量: 購入した商品の（一回の購入における）数量。',
    PURCHASE_PRICE INTEGER NOT NULL COMMENT '購入価格: 購入によって実際に会員が支払った（支払う予定の）価格。
基本は商品の定価に購入数量を掛けたものになるが、
ポイント利用や割引があったりと必ずしもそうはならない。',
    PAYMENT_COMPLETE_FLG INTEGER NOT NULL COMMENT '支払完了フラグ: この購入に関しての支払いが完了しているか否か。',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PURCHASE_ID),
    UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
    KEY (MEMBER_ID),
    KEY (PRODUCT_ID)
) COMMENT='購入: 一つの商品に対する一回の購入を表現する。
一回の購入で一つの商品を複数個買うこともある。'
2024-12-12 18:18:54,837 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PURCHASE_PAYMENT(
    PURCHASE_PAYMENT_ID BIGINT AUTO_INCREMENT NOT NULL COMMENT '購入支払ID: 連番',
    PURCHASE_ID BIGINT NOT NULL COMMENT '購入ID: 支払い対象の購入へのID',
    PAYMENT_AMOUNT DECIMAL(10,2) NOT NULL COMMENT '支払金額: 支払った金額。さて、小数点なのはなぜでしょう？',
    PAYMENT_DATETIME DATETIME NOT NULL COMMENT '支払日時: 支払ったときの日時',
    PAYMENT_METHOD_CODE CHAR(3) NOT NULL COMMENT '支払方法コード: 手渡しや銀行振込など',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    PRIMARY KEY (PURCHASE_PAYMENT_ID)
) COMMENT='購入支払: 購入に対する支払。
分割払いもできるのでmanyとなり、会員からの孫テーブルのテストができてうれしい。'
2024-12-12 18:18:54,841 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT(
    PRODUCT_ID INTEGER AUTO_INCREMENT NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '商品名称',
    PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL COMMENT '商品ハンドルコード: 商品を識別する業務上のコード。',
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL,
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
    REGULAR_PRICE INTEGER COMMENT '定価',
    REGISTER_DATETIME DATETIME NOT NULL,
    REGISTER_USER VARCHAR(200) NOT NULL,
    UPDATE_DATETIME DATETIME NOT NULL,
    UPDATE_USER VARCHAR(200) NOT NULL,
    VERSION_NO BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    UNIQUE (PRODUCT_HANDLE_CODE)
) COMMENT='商品'
2024-12-12 18:18:54,845 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_CATEGORY(
    PRODUCT_CATEGORY_CODE CHAR(3) NOT NULL COMMENT '商品カテゴリコード',
    PRODUCT_CATEGORY_NAME VARCHAR(50) NOT NULL COMMENT '商品カテゴリ名称',
    PARENT_CATEGORY_CODE CHAR(3) COMMENT '親カテゴリコード: 最上位の場合はデータなし。',
    PRIMARY KEY (PRODUCT_CATEGORY_CODE)
) COMMENT='商品カテゴリ: 商品のカテゴリを表現するマスタ。
自己参照の階層になっている。'
2024-12-12 18:18:54,848 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table PRODUCT_STATUS(
    PRODUCT_STATUS_CODE CHAR(3) NOT NULL COMMENT '商品ステータスコード',
    PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '商品ステータス名称',
    PRIMARY KEY (PRODUCT_STATUS_CODE)
) COMMENT='商品ステータス'
2024-12-12 18:18:54,851 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table REGION(
    REGION_ID INTEGER NOT NULL COMMENT '地域ID',
    REGION_NAME VARCHAR(50) NOT NULL COMMENT '地域名称',
    PRIMARY KEY (REGION_ID)
) COMMENT='地域: 主に会員の住所に対応する地域。
かなりざっくりした感じではある。'
2024-12-12 18:18:54,854 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table SERVICE_RANK(
    SERVICE_RANK_CODE CHAR(3) NOT NULL COMMENT 'サービスランクコード: サービスランクを識別するコード。',
    SERVICE_RANK_NAME VARCHAR(50) NOT NULL COMMENT 'サービスランク名称: サービスランクの名称。
（ゴールドとかプラチナとか基本的には威厳のある名前）',
    SERVICE_POINT_INCIDENCE NUMERIC(5, 3) NOT NULL COMMENT 'サービスポイント発生率: 購入ごとのサービスポイントの発生率。
購入価格にこの値をかけた数が発生ポイント。',
    NEW_ACCEPTABLE_FLG INTEGER NOT NULL COMMENT '新規受け入れ可能フラグ: このランクへの新規受け入れができるかどうか。',
    DESCRIPTION VARCHAR(200) NOT NULL,
    DISPLAY_ORDER INTEGER NOT NULL,
    PRIMARY KEY (SERVICE_RANK_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='サービスランク: 会員のサービスレベルを表現するランク。
（ゴールドとかプラチナとか）'
2024-12-12 18:18:54,857 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table MEMBER_STATUS(
    MEMBER_STATUS_CODE CHAR(3) NOT NULL COMMENT '会員ステータスコード: 会員ステータスを識別するコード。',
    MEMBER_STATUS_NAME VARCHAR(50) NOT NULL COMMENT '会員ステータス名称',
    DESCRIPTION VARCHAR(200) NOT NULL COMMENT '説明: 会員ステータスそれぞれの説明。
気の利いた説明があるとディベロッパーがとても助かる。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順: UI上のステータスの表示順を示すNO。
並べるときは、このカラムに対して昇順のソート条件にする。',
    PRIMARY KEY (MEMBER_STATUS_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='会員ステータス'
2024-12-12 18:18:54,861 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table WITHDRAWAL_REASON(
    WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL COMMENT '退会理由コード',
    WITHDRAWAL_REASON_TEXT TEXT NOT NULL COMMENT '退会理由テキスト: 退会理由の内容。テキスト形式なので目いっぱい書けるが、
そうするとUI側できれいに見せるのが大変でしょうね。',
    DISPLAY_ORDER INTEGER NOT NULL COMMENT '表示順',
    PRIMARY KEY (WITHDRAWAL_REASON_CODE),
    UNIQUE (DISPLAY_ORDER)
) COMMENT='退会理由: 会員に選ばせる定型的な退会理由のマスタ。'
2024-12-12 18:18:54,865 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table `MEMBER` add constraint FK_MEMBER_MEMBER_STATUS 
    foreign key (MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2024-12-12 18:18:54,875 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-12 18:18:54,885 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_ADDRESS add constraint FK_MEMBER_ADDRESS_REGION 
    foreign key (REGION_ID) references REGION (REGION_ID)
2024-12-12 18:18:54,895 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER_STATUS 
    foreign key (LOGIN_MEMBER_STATUS_CODE) references MEMBER_STATUS (MEMBER_STATUS_CODE)
2024-12-12 18:18:54,908 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_LOGIN add constraint FK_MEMBER_LOGIN_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-12 18:18:54,919 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-12 18:18:54,928 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SERVICE add constraint FK_MEMBER_SERVICE_SERVICE_RANK_CODE 
    foreign key (SERVICE_RANK_CODE) references SERVICE_RANK (SERVICE_RANK_CODE)
2024-12-12 18:18:54,937 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_SECURITY add constraint FK_MEMBER_SECURITY_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-12 18:18:54,946 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-12 18:18:54,958 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table MEMBER_WITHDRAWAL add constraint FK_MEMBER_WITHDRAWAL_WITHDRAWAL_REASON 
    foreign key (WITHDRAWAL_REASON_CODE) references WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE)
2024-12-12 18:18:54,970 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_MEMBER 
    foreign key (MEMBER_ID) references `MEMBER` (MEMBER_ID)
2024-12-12 18:18:54,981 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE add constraint FK_PURCHASE_PRODUCT 
    foreign key (PRODUCT_ID) references PRODUCT (PRODUCT_ID)
2024-12-12 18:18:54,994 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PURCHASE_PAYMENT add constraint FK_PURCHASE_PAYMENT_PURCHASE 
    foreign key (PURCHASE_ID) references PURCHASE (PURCHASE_ID)
2024-12-12 18:18:55,003 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_CATEGORY 
    foreign key (PRODUCT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2024-12-12 18:18:55,014 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT add constraint FK_PRODUCT_PRODUCT_STATUS 
    foreign key (PRODUCT_STATUS_CODE) references PRODUCT_STATUS (PRODUCT_STATUS_CODE)
2024-12-12 18:18:55,026 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table PRODUCT_CATEGORY add constraint FK_PRODUCT_CATEGORY_PARENT 
    foreign key (PARENT_CATEGORY_CODE) references PRODUCT_CATEGORY (PRODUCT_CATEGORY_CODE)
2024-12-12 18:18:55,035 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_MEMBER_NAME on `MEMBER`(MEMBER_NAME)
2024-12-12 18:18:55,047 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_FORMALIZED_DATETIME on `MEMBER`(FORMALIZED_DATETIME)
2024-12-12 18:18:55,060 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_LOGIN_DATETIME on MEMBER_LOGIN(LOGIN_DATETIME)
2024-12-12 18:18:55,064 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_MEMBER_SERVICE_POINT_COUNT on MEMBER_SERVICE(AKIRAKANI_OKASHII_KARAMU_MEI)
2024-12-12 18:18:55,068 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRODUCT_DATETIME on PURCHASE(PRODUCT_ID, PURCHASE_DATETIME)
2024-12-12 18:18:55,074 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_DATETIME_MEMBER on PURCHASE(PURCHASE_DATETIME, MEMBER_ID)
2024-12-12 18:18:55,081 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PRICE on PURCHASE(PURCHASE_PRICE)
2024-12-12 18:18:55,087 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PURCHASE_PAYMENT_DATETIME on PURCHASE_PAYMENT(PAYMENT_DATETIME, PAYMENT_AMOUNT)
2024-12-12 18:18:55,091 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - create index IX_PRODUCT_PRODUCT_NAME on PRODUCT(PRODUCT_NAME)
2024-12-12 18:18:55,097 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=40 failure=0
2024-12-12 18:18:55,097 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2024-12-12 18:18:55,098 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2024-12-12 18:18:55,098 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=42, failure=0 (in 3 files)
2024-12-12 18:18:55,098 [main] INFO  (DfCreateSchemaProcess#destroyChangeUserConnection():594) - ...Closing connections to change-users: [system]
2024-12-12 18:18:55,113 [main] INFO  (DfLoadDataProcess#execute():133) - 
2024-12-12 18:18:55,113 [main] INFO  (DfLoadDataProcess#execute():134) - * * * * * * * * * * *
2024-12-12 18:18:55,113 [main] INFO  (DfLoadDataProcess#execute():135) - *                   *
2024-12-12 18:18:55,113 [main] INFO  (DfLoadDataProcess#execute():136) - * Load Data         *
2024-12-12 18:18:55,113 [main] INFO  (DfLoadDataProcess#execute():137) - *                   *
2024-12-12 18:18:55,113 [main] INFO  (DfLoadDataProcess#execute():138) - * * * * * * * * * * *
2024-12-12 18:18:55,120 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():131) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2024-12-12 18:18:55,120 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():132) - writeData(playsql/data/common/xls/10-master.xls)
2024-12-12 18:18:55,120 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():133) - = = = = = = =/
2024-12-12 18:18:55,192 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2024-12-12 18:18:55,192 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {maihamadb.$$NoNameSchema$$ as main}
2024-12-12 18:18:55,192 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2024-12-12 18:18:55,207 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_STATUS:{PRV, 仮会員, 入会直後のステータスで一部のサイトサービスが利用可能, 3}
2024-12-12 18:18:55,217 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_STATUS:{FML, 正式会員, 正式な会員としてサイトサービスが利用可能, 1}
2024-12-12 18:18:55,218 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_STATUS:{WDL, 退会会員, 退会が確定した会員でサイトサービスはダメ, 2}
2024-12-12 18:18:55,220 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 3 rows are loaded to MEMBER_STATUS
2024-12-12 18:18:55,220 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - REGION:{1, アメリカ}
2024-12-12 18:18:55,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - REGION:{2, カナダ}
2024-12-12 18:18:55,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - REGION:{3, 中国}
2024-12-12 18:18:55,221 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - REGION:{4, 千葉}
2024-12-12 18:18:55,222 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 4 rows are loaded to REGION
2024-12-12 18:18:55,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - SERVICE_RANK:{PLT, PLATINUM, 12.3, 1, platinum rank, 1}
2024-12-12 18:18:55,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - SERVICE_RANK:{GLD, GOLD, 9.2, 1, gold rank, 2}
2024-12-12 18:18:55,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - SERVICE_RANK:{SIL, SILVER, 6.74, 1, silver rank, 3}
2024-12-12 18:18:55,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - SERVICE_RANK:{BRZ, BRONZE, 2, 1, bronze rank, 4}
2024-12-12 18:18:55,223 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - SERVICE_RANK:{PLS, PLASTIC, 0.1, 0, plastic rank, 5}
2024-12-12 18:18:55,225 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 5 rows are loaded to SERVICE_RANK
2024-12-12 18:18:55,225 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - WITHDRAWAL_REASON:{SIT, サイトが使いにくいから, 1}
2024-12-12 18:18:55,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - WITHDRAWAL_REASON:{OTH, その他理由, 4}
2024-12-12 18:18:55,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - WITHDRAWAL_REASON:{FRT, フリテンだから, 3}
2024-12-12 18:18:55,226 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - WITHDRAWAL_REASON:{PRD, 商品に魅力がないから, 2}
2024-12-12 18:18:55,227 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 4 rows are loaded to WITHDRAWAL_REASON
2024-12-12 18:18:55,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_CATEGORY:{MSC, 音楽, null}
2024-12-12 18:18:55,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_CATEGORY:{FOD, 食品, null}
2024-12-12 18:18:55,227 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_CATEGORY:{MCD, 音楽CD, MSC}
2024-12-12 18:18:55,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_CATEGORY:{INS, 楽器, MSC}
2024-12-12 18:18:55,228 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_CATEGORY:{HEB, ハーブ, FOD}
2024-12-12 18:18:55,229 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 5 rows are loaded to PRODUCT_CATEGORY
2024-12-12 18:18:55,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_STATUS:{ONS, 生産販売可能}
2024-12-12 18:18:55,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_STATUS:{PST, 生産中止}
2024-12-12 18:18:55,230 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT_STATUS:{SST, 販売中止}
2024-12-12 18:18:55,231 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 3 rows are loaded to PRODUCT_STATUS
2024-12-12 18:18:55,232 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():131) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2024-12-12 18:18:55,232 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():132) - writeData(playsql/data/ut/xls/20-member.xls)
2024-12-12 18:18:55,232 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():133) - = = = = = = =/
2024-12-12 18:18:55,252 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{1, Stojkovic, Pixy, FML, 2007/12/01 11:01:10, 1965/03/03, 2024-12-12 18:18:55.252, foo, 2024-12-12 18:18:55.252, foo, 0}
2024-12-12 18:18:55,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{2, Savicevic, Genius, PRV, null, 1966/09/15, 2024-12-12 18:18:55.257, foo, 2024-12-12 18:18:55.257, foo, 0}
2024-12-12 18:18:55,257 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{3, Mijatovic, Mijato, WDL, 2005/10/03 13:03:30, null, 2024-12-12 18:18:55.257, foo, 2024-12-12 18:18:55.257, foo, 0}
2024-12-12 18:18:55,258 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{4, Stankovic, Stanko, FML, 2006/09/04 14:04:40, 1978/09/11, 2024-12-12 18:18:55.258, foo, 2024-12-12 18:18:55.258, foo, 0}
2024-12-12 18:18:55,258 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{5, Milosevic, Milose, FML, 2007/08/05 15:05:50, null, 2024-12-12 18:18:55.258, foo, 2024-12-12 18:18:55.258, foo, 0}
2024-12-12 18:18:55,258 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{6, Mihajlovic, FreeKick, WDL, 2006/07/06 16:06:40, 1969/02/20, 2024-12-12 18:18:55.258, foo, 2024-12-12 18:18:55.258, foo, 0}
2024-12-12 18:18:55,259 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{7, アカギ, Akagi, FML, 2005/06/07 17:07:30, null, 2024-12-12 18:18:55.259, foo, 2024-12-12 18:18:55.259, foo, 0}
2024-12-12 18:18:55,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{8, Kezman, RedCard, FML, 2006/05/08 18:08:20, null, 2024-12-12 18:18:55.26, foo, 2024-12-12 18:18:55.26, foo, 0}
2024-12-12 18:18:55,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{9, Maslovar, JEFUnited, FML, 2007/12/31 00:00:00, 1967/02/20, 2024-12-12 18:18:55.26, foo, 2024-12-12 18:18:55.26, foo, 0}
2024-12-12 18:18:55,260 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{10, 諸葛亮孔明, ShokatsuGoGo, PRV, null, null, 2024-12-12 18:18:55.26, foo, 2024-12-12 18:18:55.26, foo, 0}
2024-12-12 18:18:55,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{11, Boban, Boban, FML, 2007/12/01 11:01:10, 1968/10/08, 2024-12-12 18:18:55.261, foo, 2024-12-12 18:18:55.261, foo, 0}
2024-12-12 18:18:55,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{12, Suker, Suker, PRV, null, 1968/01/01, 2024-12-12 18:18:55.261, foo, 2024-12-12 18:18:55.261, foo, 0}
2024-12-12 18:18:55,261 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{13, Jarni, Jarni, WDL, 2005/10/03 13:03:30, 1968/10/26, 2024-12-12 18:18:55.261, foo, 2024-12-12 18:18:55.261, foo, 0}
2024-12-12 18:18:55,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{14, Boksic, Boksic, FML, 2006/09/04 14:04:40, 1970/01/21, 2024-12-12 18:18:55.262, foo, 2024-12-12 18:18:55.262, foo, 0}
2024-12-12 18:18:55,262 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{15, Prosinecki, Prosinecki, FML, 2004/08/05 15:05:50, 1969/01/12, 2024-12-12 18:18:55.262, foo, 2024-12-12 18:18:55.262, foo, 0}
2024-12-12 18:18:55,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{16, RobeltKovac, RobeltKovac, WDL, 2006/07/06 16:06:40, null, 2024-12-12 18:18:55.263, foo, 2024-12-12 18:18:55.263, foo, 0}
2024-12-12 18:18:55,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{17, NikoKovac, NikoKovac, FML, 2005/06/07 17:07:30, null, 2024-12-12 18:18:55.263, foo, 2024-12-12 18:18:55.263, foo, 0}
2024-12-12 18:18:55,263 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{18, Jovanovic, Jovano, FML, 2006/05/08 18:08:20, 1981/04/18, 2024-12-12 18:18:55.263, foo, 2024-12-12 18:18:55.263, foo, 0}
2024-12-12 18:18:55,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{19, Milko, Milko, FML, 2005/12/31 12:34:56, 1974/09/10, 2024-12-12 18:18:55.264, foo, 2024-12-12 18:18:55.264, foo, 0}
2024-12-12 18:18:55,264 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER:{20, 諸葛瑾子瑜, ShokatsuKinKin, FML, 2001/12/31 23:59:59, null, 2024-12-12 18:18:55.264, foo, 2024-12-12 18:18:55.264, foo, 0}
2024-12-12 18:18:55,270 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 20 rows are loaded to MEMBER
2024-12-12 18:18:55,270 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{1, 1, 2007/03/24, 2015/12/31, Nagara, 4, 2024-12-12 18:18:55.27, foo, 2024-12-12 18:18:55.27, foo, 0}
2024-12-12 18:18:55,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{2, 1, 1949/01/01, 1997/03/31, New York, 1, 2024-12-12 18:18:55.271, foo, 2024-12-12 18:18:55.271, foo, 0}
2024-12-12 18:18:55,271 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{3, 1, 1997/04/01, 2000/09/30, Los Angels, 1, 2024-12-12 18:18:55.271, foo, 2024-12-12 18:18:55.271, foo, 0}
2024-12-12 18:18:55,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{4, 1, 2000/10/01, 2003/08/31, New York, 1, 2024-12-12 18:18:55.272, foo, 2024-12-12 18:18:55.272, foo, 0}
2024-12-12 18:18:55,272 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{5, 1, 2003/09/01, 2004/12/22, San Francisco Powell, 1, 2024-12-12 18:18:55.272, foo, 2024-12-12 18:18:55.272, foo, 0}
2024-12-12 18:18:55,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{6, 1, 2004/12/23, 2006/03/23, San Francisco Daly City, 1, 2024-12-12 18:18:55.273, foo, 2024-12-12 18:18:55.273, foo, 0}
2024-12-12 18:18:55,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{7, 1, 2016/01/01, 9999/12/31, Victoria, 2, 2024-12-12 18:18:55.273, foo, 2024-12-12 18:18:55.273, foo, 0}
2024-12-12 18:18:55,273 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{8, 2, 2004/12/24, 9999/12/31, Ichihara, 4, 2024-12-12 18:18:55.273, foo, 2024-12-12 18:18:55.273, foo, 0}
2024-12-12 18:18:55,274 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{9, 3, 2004/12/24, 2007/03/23, Mobara, 4, 2024-12-12 18:18:55.274, foo, 2024-12-12 18:18:55.274, foo, 0}
2024-12-12 18:18:55,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{10, 4, 2002/11/01, 9999/12/31, Sousa, 4, 2024-12-12 18:18:55.275, foo, 2024-12-12 18:18:55.275, foo, 0}
2024-12-12 18:18:55,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{11, 6, 2002/11/01, 9999/12/31, Yokoshiba, 4, 2024-12-12 18:18:55.275, foo, 2024-12-12 18:18:55.275, foo, 0}
2024-12-12 18:18:55,275 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{12, 9, 2010/11/01, 9999/12/31, Tateyama, 4, 2024-12-12 18:18:55.275, foo, 2024-12-12 18:18:55.275, foo, 0}
2024-12-12 18:18:55,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{13, 10, 1970/01/01, 9999/12/31, Shoku, 3, 2024-12-12 18:18:55.276, foo, 2024-12-12 18:18:55.276, foo, 0}
2024-12-12 18:18:55,276 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{14, 12, 2000/11/01, 2001/11/01, Oohara, 4, 2024-12-12 18:18:55.276, foo, 2024-12-12 18:18:55.276, foo, 0}
2024-12-12 18:18:55,277 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{15, 15, 2002/11/01, 2006/10/30, MinamiBousou, 4, 2024-12-12 18:18:55.277, foo, 2024-12-12 18:18:55.277, foo, 0}
2024-12-12 18:18:55,277 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{16, 15, 2007/11/01, 9999/12/31, Tomisato, 4, 2024-12-12 18:18:55.277, foo, 2024-12-12 18:18:55.277, foo, 0}
2024-12-12 18:18:55,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{17, 18, 2001/03/21, 2007/11/21, Katsuura, 4, 2024-12-12 18:18:55.278, foo, 2024-12-12 18:18:55.278, foo, 0}
2024-12-12 18:18:55,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{18, 18, 2007/11/22, 9999/12/31, Kamogawa, 4, 2024-12-12 18:18:55.278, foo, 2024-12-12 18:18:55.278, foo, 0}
2024-12-12 18:18:55,278 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{19, 19, 2000/11/01, 9999/12/31, Yotsukaido, 4, 2024-12-12 18:18:55.278, foo, 2024-12-12 18:18:55.278, foo, 0}
2024-12-12 18:18:55,279 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_ADDRESS:{20, 20, 1970/01/01, 9999/12/31, Go, 3, 2024-12-12 18:18:55.279, foo, 2024-12-12 18:18:55.279, foo, 0}
2024-12-12 18:18:55,284 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 20 rows are loaded to MEMBER_ADDRESS
2024-12-12 18:18:55,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{1, 3, 2006/12/24 23:59:59, 0, FML}
2024-12-12 18:18:55,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{2, 6, 2007/11/11 16:16:16, 0, FML}
2024-12-12 18:18:55,285 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{3, 1, 2006/12/23 22:56:29, 0, FML}
2024-12-12 18:18:55,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{4, 6, 2007/11/01 02:13:00, 0, FML}
2024-12-12 18:18:55,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{5, 7, 2006/05/24 23:12:59, 0, FML}
2024-12-12 18:18:55,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{6, 6, 2005/11/11 16:32:01, 0, PRV}
2024-12-12 18:18:55,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{7, 6, 2006/01/28 23:59:59, 1, FML}
2024-12-12 18:18:55,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{8, 6, 2007/11/09 16:23:00, 0, FML}
2024-12-12 18:18:55,286 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{9, 8, 2006/12/22 23:59:59, 0, FML}
2024-12-12 18:18:55,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{10, 6, 2007/11/11 09:01:00, 0, FML}
2024-12-12 18:18:55,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{11, 1, 2006/12/23 23:59:59, 0, FML}
2024-12-12 18:18:55,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{12, 9, 2007/11/15 12:43:00, 0, FML}
2024-12-12 18:18:55,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{13, 10, 2006/12/24 23:59:59, 0, FML}
2024-12-12 18:18:55,287 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{14, 6, 2007/04/01 16:23:01, 0, FML}
2024-12-12 18:18:55,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{15, 7, 2006/12/24 23:59:20, 1, FML}
2024-12-12 18:18:55,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{16, 6, 2007/05/01 12:23:02, 0, FML}
2024-12-12 18:18:55,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{17, 7, 2006/12/24 23:59:21, 0, FML}
2024-12-12 18:18:55,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{18, 6, 2007/06/11 17:23:03, 0, FML}
2024-12-12 18:18:55,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{19, 4, 2006/12/24 23:59:22, 0, FML}
2024-12-12 18:18:55,288 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{20, 3, 2007/11/01 16:12:04, 0, FML}
2024-12-12 18:18:55,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{21, 11, 2006/12/24 23:59:23, 0, FML}
2024-12-12 18:18:55,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{22, 1, 2007/11/01 16:23:05, 0, PRV}
2024-12-12 18:18:55,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{23, 9, 2006/12/24 23:59:24, 1, FML}
2024-12-12 18:18:55,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{24, 8, 2007/11/01 16:23:06, 0, FML}
2024-12-12 18:18:55,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{25, 7, 2007/12/24 11:59:25, 1, FML}
2024-12-12 18:18:55,289 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{26, 6, 2007/06/21 01:23:57, 0, FML}
2024-12-12 18:18:55,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{27, 5, 2006/12/24 23:59:26, 0, FML}
2024-12-12 18:18:55,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{28, 3, 2007/11/01 16:23:08, 0, FML}
2024-12-12 18:18:55,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{29, 3, 2006/12/24 23:59:27, 0, FML}
2024-12-12 18:18:55,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{30, 10, 2007/11/01 16:23:09, 0, FML}
2024-12-12 18:18:55,290 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{31, 15, 2006/07/24 23:59:28, 0, FML}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{32, 14, 2007/11/01 17:23:10, 0, FML}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{33, 15, 2007/11/01 16:23:10, 0, FML}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{34, 18, 2006/07/24 23:59:29, 0, FML}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{35, 3, 2007/11/01 17:23:11, 0, PRV}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{36, 5, 2007/11/01 16:23:11, 1, FML}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{37, 11, 2006/07/24 23:59:30, 0, FML}
2024-12-12 18:18:55,291 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{38, 20, 2007/11/01 17:23:12, 1, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{39, 19, 2007/11/01 16:23:12, 0, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{40, 4, 2006/07/24 23:59:31, 0, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{41, 4, 2007/11/01 17:23:13, 0, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{42, 4, 2007/11/01 16:23:13, 0, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{43, 4, 2006/07/24 23:52:32, 0, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{44, 4, 2007/11/01 11:23:14, 0, FML}
2024-12-12 18:18:55,292 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{45, 4, 2007/11/21 06:23:14, 0, FML}
2024-12-12 18:18:55,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{46, 12, 2006/07/24 23:52:33, 0, PRV}
2024-12-12 18:18:55,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{47, 13, 2007/11/01 11:23:15, 1, FML}
2024-12-12 18:18:55,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{48, 14, 2007/11/21 06:23:15, 0, FML}
2024-12-12 18:18:55,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{49, 17, 2006/07/24 23:52:34, 1, FML}
2024-12-12 18:18:55,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{50, 18, 2007/11/01 11:23:16, 0, FML}
2024-12-12 18:18:55,293 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{51, 16, 2007/11/21 06:23:16, 0, FML}
2024-12-12 18:18:55,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{52, 4, 2006/07/24 23:52:35, 0, FML}
2024-12-12 18:18:55,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{53, 5, 2007/11/01 11:23:17, 0, FML}
2024-12-12 18:18:55,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{54, 5, 2007/11/21 06:23:17, 0, FML}
2024-12-12 18:18:55,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{55, 11, 2006/07/24 23:52:36, 0, FML}
2024-12-12 18:18:55,294 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_LOGIN:{56, 12, 2007/11/01 11:23:18, 0, FML}
2024-12-12 18:18:55,304 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 56 rows are loaded to MEMBER_LOGIN
2024-12-12 18:18:55,304 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{1, aaa, 30符3飜は？, 自分で数えろ, 2024-12-12 18:18:55.304, foo, 2024-12-12 18:18:55.304, foo, 0}
2024-12-12 18:18:55,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{2, bbb, 50符2飜は？, 自分で数えろ, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{3, ccc, 110符2飜は？, 自分で数えろ, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{4, ddd, タンヤオ？, そう, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{5, eee2, ピンフ？, そう, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{6, fff, サンアンコウ？, そう, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,305 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{7, ggg3, イーペーコウ？, そう, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{8, hhh555, リャンペーコウ？, そう, 2024-12-12 18:18:55.305, foo, 2024-12-12 18:18:55.305, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{9, iii, サンペーコウはないよね？, 当たり前だ, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{10, jjj, 私はイカサマしません, 実はする, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{11, qwe, 70符3飜は？, 自分で数えろ, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{12, sdf, 20符4飜は？, 自分で数えろ, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{13, dfgsf, 大三元は？, 役満だよ, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{14, ert, タンヤオ？, そう, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,306 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{15, fhgf, ピンフ？, そう, 2024-12-12 18:18:55.306, foo, 2024-12-12 18:18:55.306, foo, 0}
2024-12-12 18:18:55,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{16, ghj, サンアンコウ？, そう, 2024-12-12 18:18:55.307, foo, 2024-12-12 18:18:55.307, foo, 0}
2024-12-12 18:18:55,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{17, tyuffff, サンレンコウ？, そう, 2024-12-12 18:18:55.307, foo, 2024-12-12 18:18:55.307, foo, 0}
2024-12-12 18:18:55,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{18, jkl, イーペーコウ？, そう, 2024-12-12 18:18:55.307, foo, 2024-12-12 18:18:55.307, foo, 0}
2024-12-12 18:18:55,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{19, ghjfff, 左ハイは？, 痛い, 2024-12-12 18:18:55.307, foo, 2024-12-12 18:18:55.307, foo, 0}
2024-12-12 18:18:55,307 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SECURITY:{20, cvb, 孫権は？, 呉, 2024-12-12 18:18:55.307, foo, 2024-12-12 18:18:55.307, foo, 0}
2024-12-12 18:18:55,311 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 20 rows are loaded to MEMBER_SECURITY
2024-12-12 18:18:55,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{1, 1234, PLT, 2024-12-12 18:18:55.312, foo, 2024-12-12 18:18:55.312, foo, 0}
2024-12-12 18:18:55,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{2, 2345, GLD, 2024-12-12 18:18:55.312, foo, 2024-12-12 18:18:55.312, foo, 0}
2024-12-12 18:18:55,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{3, 3456, GLD, 2024-12-12 18:18:55.312, foo, 2024-12-12 18:18:55.312, foo, 0}
2024-12-12 18:18:55,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{4, 875, BRZ, 2024-12-12 18:18:55.312, foo, 2024-12-12 18:18:55.312, foo, 0}
2024-12-12 18:18:55,312 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{5, 1111, BRZ, 2024-12-12 18:18:55.312, foo, 2024-12-12 18:18:55.312, foo, 0}
2024-12-12 18:18:55,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{6, 5422, SIL, 2024-12-12 18:18:55.313, foo, 2024-12-12 18:18:55.313, foo, 0}
2024-12-12 18:18:55,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{7, 24678, SIL, 2024-12-12 18:18:55.313, foo, 2024-12-12 18:18:55.313, foo, 0}
2024-12-12 18:18:55,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{8, 234, SIL, 2024-12-12 18:18:55.313, foo, 2024-12-12 18:18:55.313, foo, 0}
2024-12-12 18:18:55,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{9, 3, SIL, 2024-12-12 18:18:55.313, foo, 2024-12-12 18:18:55.313, foo, 0}
2024-12-12 18:18:55,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{10, 98765, PLT, 2024-12-12 18:18:55.313, foo, 2024-12-12 18:18:55.313, foo, 0}
2024-12-12 18:18:55,313 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{11, 34, GLD, 2024-12-12 18:18:55.313, foo, 2024-12-12 18:18:55.313, foo, 0}
2024-12-12 18:18:55,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{12, 532, PLT, 2024-12-12 18:18:55.316, foo, 2024-12-12 18:18:55.316, foo, 0}
2024-12-12 18:18:55,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{13, 23678, GLD, 2024-12-12 18:18:55.316, foo, 2024-12-12 18:18:55.316, foo, 0}
2024-12-12 18:18:55,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{14, 432, GLD, 2024-12-12 18:18:55.316, foo, 2024-12-12 18:18:55.316, foo, 0}
2024-12-12 18:18:55,316 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{15, 543, BRZ, 2024-12-12 18:18:55.316, foo, 2024-12-12 18:18:55.316, foo, 0}
2024-12-12 18:18:55,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{16, 23545, PLT, 2024-12-12 18:18:55.317, foo, 2024-12-12 18:18:55.317, foo, 0}
2024-12-12 18:18:55,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{17, 2345, GLD, 2024-12-12 18:18:55.317, foo, 2024-12-12 18:18:55.317, foo, 0}
2024-12-12 18:18:55,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{18, 8763, SIL, 2024-12-12 18:18:55.317, foo, 2024-12-12 18:18:55.317, foo, 0}
2024-12-12 18:18:55,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{19, 34567, SIL, 2024-12-12 18:18:55.317, foo, 2024-12-12 18:18:55.317, foo, 0}
2024-12-12 18:18:55,317 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_SERVICE:{20, 43, GLD, 2024-12-12 18:18:55.317, foo, 2024-12-12 18:18:55.317, foo, 0}
2024-12-12 18:18:55,322 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 20 rows are loaded to MEMBER_SERVICE
2024-12-12 18:18:55,322 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_WITHDRAWAL:{3, null, 俺はワールドカップでPK外した…, 2006/12/24 23:59:59.123, 2024-12-12 18:18:55.322, foo, 2024-12-12 18:18:55.322, foo}
2024-12-12 18:18:55,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_WITHDRAWAL:{6, SIT, null, 2007/11/11 16:00:00.456, 2024-12-12 18:18:55.323, foo, 2024-12-12 18:18:55.323, foo}
2024-12-12 18:18:55,323 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_WITHDRAWAL:{13, PRD, 左サイドで走りすぎて疲れた, 2006/12/24 05:52:29.789, 2024-12-12 18:18:55.323, foo, 2024-12-12 18:18:55.323, foo}
2024-12-12 18:18:55,324 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - MEMBER_WITHDRAWAL:{16, SIT, コバチが２人いるため, 2007/11/13 16:00:00.456, 2024-12-12 18:18:55.324, foo, 2024-12-12 18:18:55.324, foo}
2024-12-12 18:18:55,325 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 4 rows are loaded to MEMBER_WITHDRAWAL
2024-12-12 18:18:55,325 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():131) - /= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
2024-12-12 18:18:55,325 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():132) - writeData(playsql/data/ut/xls/30-product.xls)
2024-12-12 18:18:55,325 [main] INFO  (DfXlsDataHandlingWriter#writeSeveralData():133) - = = = = = = =/
2024-12-12 18:18:55,342 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{1, Cold Spring Harbor, BILLYJOEL-01, MCD, PST, 1100, 2024-12-12 18:18:55.342, foo, 2024-12-12 18:18:55.342, foo, 0}
2024-12-12 18:18:55,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{2, Piano Man, BILLYJOEL-02, MCD, ONS, 1200, 2024-12-12 18:18:55.343, foo, 2024-12-12 18:18:55.343, foo, 0}
2024-12-12 18:18:55,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{3, Streetlife Serenade, BILLYJOEL-03, MCD, ONS, 1300, 2024-12-12 18:18:55.343, foo, 2024-12-12 18:18:55.343, foo, 0}
2024-12-12 18:18:55,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{4, Turnstiles, BILLYJOEL-04, MCD, ONS, 1400, 2024-12-12 18:18:55.343, foo, 2024-12-12 18:18:55.343, foo, 0}
2024-12-12 18:18:55,343 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{5, The Stranger, BILLYJOEL-05, MCD, ONS, 1500, 2024-12-12 18:18:55.343, foo, 2024-12-12 18:18:55.343, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{6, 52nd Street, BILLYJOEL-06, MCD, ONS, 1600, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{7, Glass House, BILLYJOEL-07, MCD, ONS, 1700, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{8, Nylon Curtain, BILLYJOEL-08, MCD, ONS, 1800, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{9, Bridge, BILLYJOEL-09, MCD, ONS, 1900, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{10, Storm Front, BILLYJOEL-10, MCD, ONS, 2000, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{11, River of Dreams, BILLYJOEL-11, MCD, ONS, 2100, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{12, Grand Piano, PIANO-01, INS, ONS, 1400000, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{13, Upright Piano, PIANO-02, INS, ONS, 1100000, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,344 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{14, Low Price Flute, FLUTE-01, INS, ONS, 50000, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{15, Silver Flute, FLUTE-02, INS, ONS, null, 2024-12-12 18:18:55.344, foo, 2024-12-12 18:18:55.344, foo, 0}
2024-12-12 18:18:55,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{16, Gold Flute, FLUTE-03, INS, ONS, null, 2024-12-12 18:18:55.345, foo, 2024-12-12 18:18:55.345, foo, 0}
2024-12-12 18:18:55,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{17, Rosemary (100g), HARB-100-01, HEB, ONS, 400, 2024-12-12 18:18:55.345, foo, 2024-12-12 18:18:55.345, foo, 0}
2024-12-12 18:18:55,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{18, Lemon Grass (100g), HARB-100-02, HEB, ONS, 380, 2024-12-12 18:18:55.345, foo, 2024-12-12 18:18:55.345, foo, 0}
2024-12-12 18:18:55,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{19, Camomile (100g), HARB-100-03, HEB, ONS, 380, 2024-12-12 18:18:55.345, foo, 2024-12-12 18:18:55.345, foo, 0}
2024-12-12 18:18:55,345 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PRODUCT:{20, Hatomugi (100g), HARB-100-04, HEB, ONS, 340, 2024-12-12 18:18:55.345, foo, 2024-12-12 18:18:55.345, foo, 0}
2024-12-12 18:18:55,350 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 20 rows are loaded to PRODUCT
2024-12-12 18:18:55,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{1, 5, 3, 2006/12/24 23:59:59, 1, 1800, 1, 2024-12-12 18:18:55.351, foo, 2024-12-12 18:18:55.351, foo, 0}
2024-12-12 18:18:55,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{2, 15, 7, 2007/11/11 16:16:16, 1, 1700, 1, 2024-12-12 18:18:55.351, foo, 2024-12-12 18:18:55.351, foo, 0}
2024-12-12 18:18:55,351 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{3, 13, 3, 2006/12/23 22:56:29.235, 1, 1800, 1, 2024-12-12 18:18:55.351, foo, 2024-12-12 18:18:55.351, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{4, 2, 5, 2007/11/01 02:13:00, 2, 1700, 1, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{5, 9, 11, 2008/01/04 23:12:59, 5, 1800, 1, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{6, 20, 2, 2002/01/01 16:32:01, 1, 2000, 1, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{7, 19, 9, 2006/01/28 23:59:59.999, 1, 1000, 0, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{8, 4, 7, 2007/11/09 16:23:00, 1, 1535, 1, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{9, 4, 10, 2006/12/22 23:59:59, 20, 1700, 1, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,352 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{10, 2, 10, 2007/11/01 02:13:00.345, 1, 1700, 0, 2024-12-12 18:18:55.352, foo, 2024-12-12 18:18:55.352, foo, 0}
2024-12-12 18:18:55,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{11, 5, 2, 2007/11/09 16:23:01, 1, 1800, 1, 2024-12-12 18:18:55.353, foo, 2024-12-12 18:18:55.353, foo, 0}
2024-12-12 18:18:55,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{12, 15, 2, 2006/12/22 23:59:12, 1, 1700, 1, 2024-12-12 18:18:55.353, foo, 2024-12-12 18:18:55.353, foo, 0}
2024-12-12 18:18:55,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{13, 13, 8, 2007/11/01 02:13:00.346, 1, 1800, 1, 2024-12-12 18:18:55.353, foo, 2024-12-12 18:18:55.353, foo, 0}
2024-12-12 18:18:55,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{14, 2, 4, 2007/11/09 16:23:02, 2, 1700, 1, 2024-12-12 18:18:55.353, foo, 2024-12-12 18:18:55.353, foo, 0}
2024-12-12 18:18:55,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{15, 9, 11, 2006/12/22 23:59:32, 5, 1800, 1, 2024-12-12 18:18:55.353, foo, 2024-12-12 18:18:55.353, foo, 0}
2024-12-12 18:18:55,353 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{16, 20, 1, 2007/11/01 02:13:00.347, 1, 2000, 1, 2024-12-12 18:18:55.353, foo, 2024-12-12 18:18:55.353, foo, 0}
2024-12-12 18:18:55,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{17, 19, 11, 2006/12/22 23:59:33, 2, 1000, 0, 2024-12-12 18:18:55.354, foo, 2024-12-12 18:18:55.354, foo, 0}
2024-12-12 18:18:55,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{18, 4, 10, 2007/11/01 02:13:00.348, 1, 1535, 1, 2024-12-12 18:18:55.354, foo, 2024-12-12 18:18:55.354, foo, 0}
2024-12-12 18:18:55,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{19, 4, 11, 2007/11/01 02:13:00.348, 4, 1700, 1, 2024-12-12 18:18:55.354, foo, 2024-12-12 18:18:55.354, foo, 0}
2024-12-12 18:18:55,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{20, 2, 11, 2006/12/22 23:59:35, 1, 1700, 0, 2024-12-12 18:18:55.354, foo, 2024-12-12 18:18:55.354, foo, 0}
2024-12-12 18:18:55,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{21, 2, 15, 2006/12/22 23:59:35, 1, 400000, 0, 2024-12-12 18:18:55.354, foo, 2024-12-12 18:18:55.354, foo, 0}
2024-12-12 18:18:55,354 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{22, 3, 6, 2007/11/01 02:13:00.350, 4, 1800, 1, 2024-12-12 18:18:55.354, foo, 2024-12-12 18:18:55.354, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{23, 15, 7, 2006/12/22 23:59:36, 1, 1700, 1, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{24, 13, 3, 2007/09/11 12:13:00.351, 1, 1800, 1, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{25, 16, 2, 2006/12/22 23:59:37, 2, 1700, 1, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{26, 3, 4, 2005/12/21 12:13:00.352, 1, 1800, 1, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{27, 2, 8, 2006/12/22 23:59:38, 1, 2000, 1, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{28, 6, 17, 2007/11/01 02:13:00.353, 2, 600, 0, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,355 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{29, 4, 4, 2006/12/22 23:59:39, 1, 1535, 1, 2024-12-12 18:18:55.355, foo, 2024-12-12 18:18:55.355, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{30, 4, 3, 2007/11/01 02:13:00.354, 4, 1700, 1, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{31, 4, 10, 2006/12/22 23:59:40, 1, 1700, 0, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{32, 13, 3, 2006/12/28 12:13:10.355, 1, 1800, 1, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{33, 16, 2, 2006/12/22 23:59:41, 2, 1700, 1, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{34, 3, 4, 2007/05/21 12:13:00.356, 1, 1800, 1, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{35, 2, 8, 2006/12/12 23:59:42, 1, 2000, 1, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,356 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{36, 6, 3, 2007/05/01 02:13:00.357, 2, 1000, 0, 2024-12-12 18:18:55.356, foo, 2024-12-12 18:18:55.356, foo, 0}
2024-12-12 18:18:55,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{37, 4, 4, 2006/12/12 23:59:43, 1, 1535, 1, 2024-12-12 18:18:55.357, foo, 2024-12-12 18:18:55.357, foo, 0}
2024-12-12 18:18:55,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{38, 4, 3, 2007/05/01 02:03:00.358, 4, 1700, 1, 2024-12-12 18:18:55.357, foo, 2024-12-12 18:18:55.357, foo, 0}
2024-12-12 18:18:55,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{39, 4, 10, 2006/12/12 23:59:44, 1, 1700, 0, 2024-12-12 18:18:55.357, foo, 2024-12-12 18:18:55.357, foo, 0}
2024-12-12 18:18:55,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{40, 4, 10, 2007/05/01 12:13:00.359, 1, 1700, 0, 2024-12-12 18:18:55.357, foo, 2024-12-12 18:18:55.357, foo, 0}
2024-12-12 18:18:55,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{41, 4, 11, 2007/11/01 02:13:01.354, 4, 1700, 1, 2024-12-12 18:18:55.357, foo, 2024-12-12 18:18:55.357, foo, 0}
2024-12-12 18:18:55,357 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{42, 10, 16, 2006/12/22 23:59:40, 1, 2800000, 1, 2024-12-12 18:18:55.357, foo, 2024-12-12 18:18:55.357, foo, 0}
2024-12-12 18:18:55,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{43, 13, 17, 2006/12/28 12:13:10.355, 1, 1800, 1, 2024-12-12 18:18:55.358, foo, 2024-12-12 18:18:55.358, foo, 0}
2024-12-12 18:18:55,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{44, 16, 14, 2006/12/22 23:59:41, 2, 1700, 1, 2024-12-12 18:18:55.358, foo, 2024-12-12 18:18:55.358, foo, 0}
2024-12-12 18:18:55,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{45, 3, 18, 2007/05/21 12:13:00.356, 1, 1800, 1, 2024-12-12 18:18:55.358, foo, 2024-12-12 18:18:55.358, foo, 0}
2024-12-12 18:18:55,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{46, 2, 7, 2006/12/12 23:59:42, 1, 2000, 1, 2024-12-12 18:18:55.358, foo, 2024-12-12 18:18:55.358, foo, 0}
2024-12-12 18:18:55,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{47, 6, 14, 2007/05/01 02:13:00.357, 2, 1000, 0, 2024-12-12 18:18:55.358, foo, 2024-12-12 18:18:55.358, foo, 0}
2024-12-12 18:18:55,358 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{48, 16, 12, 2006/12/12 23:59:43, 1, 100000, 1, 2024-12-12 18:18:55.358, foo, 2024-12-12 18:18:55.358, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{49, 4, 20, 2007/05/01 02:03:00.358, 4, 1700, 1, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{50, 4, 19, 2006/12/12 23:59:44, 1, 1700, 0, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{51, 4, 11, 2007/11/21 02:13:00.354, 4, 1700, 1, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{52, 20, 17, 2006/12/23 23:59:40, 1, 400, 0, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{53, 13, 16, 2007/12/28 12:13:10.355, 1, 600000, 1, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{54, 16, 14, 2006/02/22 23:59:41, 2, 1700, 1, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,359 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{55, 3, 3, 2007/07/21 12:13:00.356, 1, 1800, 1, 2024-12-12 18:18:55.359, foo, 2024-12-12 18:18:55.359, foo, 0}
2024-12-12 18:18:55,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{56, 2, 8, 2006/12/22 23:59:42, 1, 2000, 1, 2024-12-12 18:18:55.36, foo, 2024-12-12 18:18:55.36, foo, 0}
2024-12-12 18:18:55,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{57, 6, 19, 2007/02/01 02:13:00.357, 2, 1000, 0, 2024-12-12 18:18:55.36, foo, 2024-12-12 18:18:55.36, foo, 0}
2024-12-12 18:18:55,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{58, 2, 12, 2006/12/12 23:59:43, 1, 4000000, 1, 2024-12-12 18:18:55.36, foo, 2024-12-12 18:18:55.36, foo, 0}
2024-12-12 18:18:55,360 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{59, 4, 18, 2007/05/01 02:03:00.358, 1, 380, 1, 2024-12-12 18:18:55.36, foo, 2024-12-12 18:18:55.36, foo, 0}
2024-12-12 18:18:55,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{60, 4, 20, 2006/12/12 23:59:44, 2, 680, 0, 2024-12-12 18:18:55.361, foo, 2024-12-12 18:18:55.361, foo, 0}
2024-12-12 18:18:55,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{61, 1, 16, 2008-03-03 06:34:56.000, 3, 12000000, 1, 2024-12-12 18:18:55.361, foo, 2024-12-12 18:18:55.361, foo, 0}
2024-12-12 18:18:55,361 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{62, 1, 2, 2009-06-04 06:34:56.000, 12, 20000, 1, 2024-12-12 18:18:55.361, foo, 2024-12-12 18:18:55.361, foo, 0}
2024-12-12 18:18:55,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{63, 1, 6, 2010-09-26 06:34:56.000, 2, 2000, 1, 2024-12-12 18:18:55.362, foo, 2024-12-12 18:18:55.362, foo, 0}
2024-12-12 18:18:55,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{64, 1, 8, 2011-03-03 09:45:29.000, 1, 50, 1, 2024-12-12 18:18:55.362, foo, 2024-12-12 18:18:55.362, foo, 0}
2024-12-12 18:18:55,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{65, 1, 13, 2012-06-04 09:45:29.000, 1, 1000000, 1, 2024-12-12 18:18:55.362, foo, 2024-12-12 18:18:55.362, foo, 0}
2024-12-12 18:18:55,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{66, 1, 13, 2013-09-26 09:45:29.000, 1, 900000, 1, 2024-12-12 18:18:55.362, foo, 2024-12-12 18:18:55.362, foo, 0}
2024-12-12 18:18:55,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{67, 1, 5, 2014-03-03 21:02:12.000, 2, 3000, 1, 2024-12-12 18:18:55.362, foo, 2024-12-12 18:18:55.362, foo, 0}
2024-12-12 18:18:55,362 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{68, 1, 17, 2015-06-04 21:02:12.000, 30, 3000, 1, 2024-12-12 18:18:55.362, foo, 2024-12-12 18:18:55.362, foo, 0}
2024-12-12 18:18:55,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{69, 1, 17, 2016-09-26 21:02:12.000, 1, 1000, 1, 2024-12-12 18:18:55.363, foo, 2024-12-12 18:18:55.363, foo, 0}
2024-12-12 18:18:55,363 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE:{70, 1, 17, 2017-03-03 01:11:00.000, 1, 1200, 1, 2024-12-12 18:18:55.363, foo, 2024-12-12 18:18:55.363, foo, 0}
2024-12-12 18:18:55,376 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 70 rows are loaded to PURCHASE
2024-12-12 18:18:55,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{1, 1, 1800, 2006/12/25 23:59:59, BAK, 2024-12-12 18:18:55.377, foo, 2024-12-12 18:18:55.377, foo}
2024-12-12 18:18:55,377 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{2, 2, 1700, 2007/11/13 16:16:16, BAK, 2024-12-12 18:18:55.377, foo, 2024-12-12 18:18:55.377, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{3, 3, 900, 2006/12/23 23:56:29, CRC, 2024-12-12 18:18:55.377, foo, 2024-12-12 18:18:55.377, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{4, 3, 900, 2006/12/23 23:56:30, HAN, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{5, 4, 1700, 2007/12/01 02:13:00, HAN, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{6, 5, 800.20, 2008/04/04 23:12:59, HAN, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{7, 5, 1000.90, 2008/05/04 23:12:59, CRC, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{8, 6, 1000, 2002/01/01 16:32:01, CRC, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{9, 6, 400.8, 2002/01/01 16:32:01, CRC, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,378 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{10, 6, 599.2, 2002/01/01 16:32:01, HAN, 2024-12-12 18:18:55.378, foo, 2024-12-12 18:18:55.378, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{11, 7, 300, 2006/01/28 23:59:59, CRC, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{12, 8, 535.5, 2007/11/09 16:23:00, BAK, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{13, 8, 999.5, 2014/11/09 16:23:05, BAK, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{14, 9, 1700, 2006/12/22 23:59:59, BAK, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{15, 11, 1799.2, 2014/11/09 16:23:01, CRC, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{16, 11, 0.8, 2014/11/09 16:23:01, HAN, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,379 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{17, 12, 1690, 2011/12/22 23:59:12, HAN, 2024-12-12 18:18:55.379, foo, 2024-12-12 18:18:55.379, foo}
2024-12-12 18:18:55,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{18, 12, 10, 2011/12/22 23:59:12, CRC, 2024-12-12 18:18:55.38, foo, 2024-12-12 18:18:55.38, foo}
2024-12-12 18:18:55,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{19, 13, 1800.7, 2007/11/01 02:13:00, CRC, 2024-12-12 18:18:55.38, foo, 2024-12-12 18:18:55.38, foo}
2024-12-12 18:18:55,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{20, 14, 1700, 2008/11/09 16:23:02, BAK, 2024-12-12 18:18:55.38, foo, 2024-12-12 18:18:55.38, foo}
2024-12-12 18:18:55,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{21, 15, 300, 2006/12/22 23:59:32, HAN, 2024-12-12 18:18:55.38, foo, 2024-12-12 18:18:55.38, foo}
2024-12-12 18:18:55,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{22, 15, 600, 2007/12/22 23:59:32, BAK, 2024-12-12 18:18:55.38, foo, 2024-12-12 18:18:55.38, foo}
2024-12-12 18:18:55,380 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{23, 15, 900, 2008/12/22 23:59:32, HAN, 2024-12-12 18:18:55.38, foo, 2024-12-12 18:18:55.38, foo}
2024-12-12 18:18:55,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{24, 16, 2000, 2012/11/01 02:13:00, BAK, 2024-12-12 18:18:55.381, foo, 2024-12-12 18:18:55.381, foo}
2024-12-12 18:18:55,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{25, 18, 1535, 2013/11/01 02:13:00, HAN, 2024-12-12 18:18:55.381, foo, 2024-12-12 18:18:55.381, foo}
2024-12-12 18:18:55,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{26, 19, 1700, 2007/11/01 02:13:00, HAN, 2024-12-12 18:18:55.381, foo, 2024-12-12 18:18:55.381, foo}
2024-12-12 18:18:55,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{27, 20, 5, 2006/12/22 23:59:35, HAN, 2024-12-12 18:18:55.381, foo, 2024-12-12 18:18:55.381, foo}
2024-12-12 18:18:55,381 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{28, 21, 399999, 2006/12/22 23:59:35, BAK, 2024-12-12 18:18:55.381, foo, 2024-12-12 18:18:55.381, foo}
2024-12-12 18:18:55,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{29, 22, 1800, 2007/11/01 02:13:00, BAK, 2024-12-12 18:18:55.382, foo, 2024-12-12 18:18:55.382, foo}
2024-12-12 18:18:55,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{30, 23, 1700, 2006/12/22 23:59:36, HAN, 2024-12-12 18:18:55.382, foo, 2024-12-12 18:18:55.382, foo}
2024-12-12 18:18:55,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{31, 23, 1700, 2006/12/22 23:59:36, HAN, 2024-12-12 18:18:55.382, foo, 2024-12-12 18:18:55.382, foo}
2024-12-12 18:18:55,382 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{32, 23, 1700, 2006/12/22 23:59:36, HAN, 2024-12-12 18:18:55.382, foo, 2024-12-12 18:18:55.382, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{33, 24, 1000, 2012/09/11 12:13:00, BAK, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{34, 24, 800, 2015/09/11 12:13:00, BAK, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{35, 25, 1700, 2013/12/22 23:59:37, BAK, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{36, 26, 1800, 2005/12/21 12:13:00, BAK, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{37, 27, 2000, 2006/12/22 23:59:38, HAN, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{38, 28, 600, 2007/11/01 02:13:00, BAK, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,383 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{39, 29, 1535, 2006/12/22 23:59:39, BAK, 2024-12-12 18:18:55.383, foo, 2024-12-12 18:18:55.383, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{40, 30, 100, 2010/09/01 02:13:00, HAN, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{41, 30, 200, 2011/10/31 02:13:00, CRC, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{42, 30, 300.75, 2012/11/01 02:13:00, CRC, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{43, 30, 400.25, 2013/12/01 02:13:00, HAN, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{44, 30, 300, 2014/09/01 02:13:00, HAN, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{45, 30, 700, 2014/10/01 02:13:00, HAN, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{46, 31, 1700.85, 2006/12/22 23:59:40, HAN, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{47, 32, 1800, 2009/12/28 12:13:10, HAN, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,384 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{48, 33, 1700, 2006/12/22 23:59:41, CRC, 2024-12-12 18:18:55.384, foo, 2024-12-12 18:18:55.384, foo}
2024-12-12 18:18:55,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{49, 34, 1800, 2007/05/21 12:13:00, BAK, 2024-12-12 18:18:55.385, foo, 2024-12-12 18:18:55.385, foo}
2024-12-12 18:18:55,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{50, 35, 2000, 2006/12/12 23:59:42, CRC, 2024-12-12 18:18:55.385, foo, 2024-12-12 18:18:55.385, foo}
2024-12-12 18:18:55,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{51, 36, 300.1, 2012/05/01 02:13:00, CRC, 2024-12-12 18:18:55.385, foo, 2024-12-12 18:18:55.385, foo}
2024-12-12 18:18:55,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{52, 36, 300.8, 2013/05/01 02:13:00, HAN, 2024-12-12 18:18:55.385, foo, 2024-12-12 18:18:55.385, foo}
2024-12-12 18:18:55,385 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{53, 36, 300.25, 2014/05/01 02:13:00, HAN, 2024-12-12 18:18:55.385, foo, 2024-12-12 18:18:55.385, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{54, 37, 1535, 2006/12/12 23:59:43, HAN, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{55, 38, 1700, 2007/05/01 02:03:00, HAN, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{56, 40, 128, 2007/05/01 12:13:00, BAK, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{57, 40, 256, 2013/05/01 12:13:00, BAK, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{58, 40, 512, 2009/05/01 12:13:00, CRC, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{59, 41, 1700, 2007/11/01 02:13:00, HAN, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{60, 42, 30000000, 2014/03/22 21:59:40, HAN, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{61, 43, 1800, 2006/12/28 12:13:10, BAK, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{62, 44, 1700, 2006/12/22 23:59:41, BAK, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,386 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{63, 45, 1800, 2007/05/21 12:13:00, CRC, 2024-12-12 18:18:55.386, foo, 2024-12-12 18:18:55.386, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{64, 46, 2000, 2010/12/12 23:59:42, BAK, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{65, 48, 90000, 2006/12/12 23:59:43, HAN, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{66, 48, 10000, 2006/12/12 23:59:43, BAK, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{67, 49, 1700.66, 2007/05/01 02:03:00, HAN, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{68, 51, 1700, 2007/11/21 02:13:00, BAK, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{69, 52, 100, 2006/12/23 23:59:40, BAK, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{70, 52, 40, 2007/12/23 23:59:40, HAN, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,387 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{71, 52, 40, 2008/12/23 23:59:40, HAN, 2024-12-12 18:18:55.387, foo, 2024-12-12 18:18:55.387, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{72, 52, 40, 2009/12/23 23:59:40, HAN, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{73, 52, 40, 2010/12/23 23:59:40, BAK, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{74, 52, 40, 2011/12/23 23:59:40, CRC, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{75, 52, 40, 2012/12/23 23:59:40, BAK, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{76, 52, 40, 2013/12/23 23:59:40, HAN, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{77, 52, 40, 2014/12/23 23:59:40, HAN, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{78, 52, 40, 2015/12/23 23:59:40, HAN, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,388 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{79, 53, 600000, 2007/12/28 12:13:10, BAK, 2024-12-12 18:18:55.388, foo, 2024-12-12 18:18:55.388, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{80, 54, 1700.42, 2008/02/22 23:59:41, CRC, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{81, 55, 1600, 2012/07/21 12:13:00, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{82, 55, 200, 2008/07/21 12:13:00, CRC, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{83, 56, 2000, 2009/12/22 23:59:42, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{84, 56, 2000, 2009/12/22 23:59:42, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{85, 56, 2000, 2009/12/22 23:59:42, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{86, 56, 2000, 2009/12/22 23:59:42, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{87, 57, 999, 2014/02/01 02:13:00, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{88, 58, 4000000, 2006/12/12 23:59:43, HAN, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,389 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{89, 59, 380.77, 2013/05/01 02:03:00, CRC, 2024-12-12 18:18:55.389, foo, 2024-12-12 18:18:55.389, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{90, 60, 675.88, 2006/12/12 23:59:44, BAK, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{91, 61, 12000000, 2008/03/03 06:34:56, HAN, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{92, 62, 20000, 2009/06/04 06:34:56, HAN, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{93, 63, 2000, 2010/09/26 06:34:56, HAN, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{94, 64, 50, 2011/03/03 09:45:29, BAK, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{95, 65, 1000000, 2012/06/04 09:45:29, BAK, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{96, 66, 900000, 2013/09/26 09:45:29, BAK, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{97, 67, 3000, 2014/03/03 21:02:12, CRC, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,390 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{98, 68, 3000, 2015/06/04 21:02:12, CRC, 2024-12-12 18:18:55.39, foo, 2024-12-12 18:18:55.39, foo}
2024-12-12 18:18:55,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{99, 69, 1000, 2016/09/26 21:02:12, CRC, 2024-12-12 18:18:55.391, foo, 2024-12-12 18:18:55.391, foo}
2024-12-12 18:18:55,391 [main] INFO  (DfAbsractDataWriter#handleLoggingInsert():1090) - PURCHASE_PAYMENT:{100, 70, 1200, 2017/03/03 01:11:00, HAN, 2024-12-12 18:18:55.391, foo, 2024-12-12 18:18:55.391, foo}
2024-12-12 18:18:55,406 [main] INFO  (DfAbsractDataWriter#noticeLoadedRowSize():1106) -  -> 100 rows are loaded to PURCHASE_PAYMENT
2024-12-12 18:18:55,407 [main] INFO  (DfLoadDataProcess#lazyCheckLoadedClassifiaction():387) - ...Checking implicit set of classification
2024-12-12 18:18:55,411 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2024-12-12 18:18:55,411 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2024-12-12 18:18:55,411 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2024-12-12 18:18:55,411 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2024-12-12 18:18:55,411 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2024-12-12 18:18:55,411 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2024-12-12 18:18:55,413 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2024-12-12 18:18:55,413 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2024-12-12 18:18:55,413 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2024-12-12 18:18:55,414 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2024-12-12 18:18:55,415 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s944ms

  DBFLUTE_CLIENT: {maihamadb}
    database  = mysql (MySQL 8.0.40)
    language  = java
    container = lasta_di
    package   = org.docksidestage.handson.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = com.mysql.jdbc.Driver
    url    = jdbc:mysql://localhost:43376/maihamadb?allowPublicKeyRetrieval=true&sslMode=DISABLED
    schema = {maihamadb.$$NoNameSchema$$ as main}
    user   = maihamadb
    props  = {password=, user=root}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=42, failure=0 (in 3 files) - 00m00s539ms
  (Initialize Schema) - 00m00s212ms
  (Create Schema) - 00m00s326ms
  o replace-schema-00-system.sql
  o replace-schema-10-basic.sql
  o replace-schema.sql

 Load Data: common:{xls=1}, ut:{xls=2} - 00m00s297ms
  <common>
  o 10-master.xls
  <ut>
  o 20-member.xls
  o 30-product.xls

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s003ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
